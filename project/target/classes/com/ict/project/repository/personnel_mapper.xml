<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="personnel">

    <select id="findByEmpNameContaining" resultType="java.util.Map">
        SELECT
            e.emp_idx,
            u.emp_name,
            e.pay_grade,
            e.position,
            e.dept_name,
            e.hire_date,
            e.employment_type,
            e.pay,
            s.bonus,
            s.base_salary
        FROM employee e
        INNER JOIN users u ON e.user_idx = u.user_idx
        LEFT JOIN (
            SELECT * FROM salary s1
            WHERE (emp_idx, payment_date) IN (
                SELECT emp_idx, MAX(payment_date)
                FROM salary
                GROUP BY emp_idx
            )
        ) s ON e.emp_idx = s.emp_idx
        WHERE u.emp_name LIKE CONCAT('%', #{keyword}, '%')AND u.remove = 0
    </select>

    <select id="findByDeptNameContaining" resultType="java.util.Map">
        SELECT
             e.emp_idx,
            u.emp_name,
            e.pay_grade,
            e.position,
            e.dept_name,
            e.hire_date,
            e.employment_type,
            e.pay,
            s.bonus,
            s.base_salary
        FROM employee e
        INNER JOIN users u ON e.user_idx = u.user_idx
        LEFT JOIN (
            SELECT * FROM salary s1
            WHERE (emp_idx, payment_date) IN (
                SELECT emp_idx, MAX(payment_date)
                FROM salary
                GROUP BY emp_idx
            )
        ) s ON e.emp_idx = s.emp_idx
        WHERE e.dept_name LIKE CONCAT('%', #{keyword}, '%')AND u.remove = 0
    </select>

    
    <select id="findByPositionContaining" resultType="java.util.Map">
       SELECT 
     e.emp_idx,
            u.emp_name,
            e.pay_grade,
            e.position,
            e.dept_name,
            e.hire_date,
            e.employment_type,
            e.pay,
            s.bonus,
            s.base_salary
FROM employee e
JOIN users u ON e.user_idx = u.user_idx
LEFT JOIN (
    SELECT s1.emp_idx, s1.base_salary, s1.bonus
    FROM salary s1
    JOIN (
        SELECT emp_idx, MAX(payment_date) AS max_date
        FROM salary
        GROUP BY emp_idx
    ) s2 ON s1.emp_idx = s2.emp_idx AND s1.payment_date = s2.max_date
) s ON e.emp_idx = s.emp_idx
WHERE u.emp_name LIKE CONCAT('%', #{searchKeyword}, '%')AND u.remove = 0
    </select>

 
    <select id="paydtail" parameterType="String" resultType="java.util.Map">
        SELECT u.emp_name, u.emp_email, u.phone_number,
               e.team, e.position, e.pay_grade, e.hire_date,
               u.gender, e.emp_idx, e.pay,
               u.home, u.detail_home
        FROM employee e
        INNER JOIN users u ON e.user_idx = u.user_idx
        WHERE e.emp_idx = #{emp_idx}
    </select>

  
    <select id="payList" parameterType="map" resultType="java.util.Map">
        SELECT
            e.emp_idx,
            u.emp_name,
            s.payment_date,
            e.pay_grade,
            e.team,
            e.position,
            e.employment_type,
            s.base_salary,
            s.bonus
        FROM employee e
        INNER JOIN users u ON e.user_idx = u.user_idx
        LEFT JOIN salary s ON e.emp_idx = s.emp_idx
        WHERE s.payment_date = #{payment_date}
        AND e.emp_idx = #{emp_idx}AND u.remove = 0
    </select>

    
    <insert id="payinsert" parameterType="map">
        INSERT INTO salary (emp_idx, base_salary, bonus, payment_date)
        VALUES (#{emp_idx}, #{base_salary}, #{bonus}, #{payment_date});
    </insert>

    
    <update id="updatePay" parameterType="map">
        UPDATE salary
        SET base_salary = #{base_salary},
            bonus = #{bonus},
            payment_date = #{payment_date}
        WHERE emp_idx = #{emp_idx}
        AND payment_date = #{payment_date}AND u.remove = 0;
    </update>

  
    <select id="checkPayRecord" parameterType="map" resultType="java.util.Map">
        SELECT salary_id
        FROM salary
        WHERE emp_idx = #{emp_idx}
        AND payment_date = #{payment_date}
    </select>

   
    <update id="updateEmployeePay" parameterType="map">
        UPDATE employee
    SET pay = (
        SELECT base_salary + bonus
        FROM salary
        WHERE emp_idx = #{emp_idx}
        ORDER BY payment_date DESC
        LIMIT 1
    )
    WHERE emp_idx = #{emp_idx}
    </update>

	<select id="payListAll" parameterType="String" resultType="java.util.Map">
    SELECT
        e.emp_idx,
        u.emp_name,
        s.payment_date,
        e.pay_grade,
        e.team,
        e.position,
        e.employment_type,
        s.base_salary,
        s.bonus
    FROM employee e
    INNER JOIN users u ON e.user_idx = u.user_idx
    LEFT JOIN salary s ON e.emp_idx = s.emp_idx
    WHERE e.emp_idx = #{emp_idx}
    ORDER BY s.payment_date DESC
</select>

<update id="updateLatestSalary" parameterType="map">
    UPDATE salary
    SET base_salary = #{base_salary}, bonus = #{bonus}
    WHERE emp_idx = #{emp_idx}
    AND payment_date = (
        SELECT MAX(payment_date)
        FROM salary
        WHERE emp_idx = #{emp_idx}
    )
</update>

<select id="getLatestSalary" parameterType="String" resultType="map">
    SELECT base_salary, bonus,salary_id
    FROM salary
    WHERE emp_idx = #{emp_idx}
    ORDER BY payment_date DESC
    LIMIT 1
</select>

<update id="updatePayById" parameterType="map">
    UPDATE salary
    SET base_salary = #{base_salary},
        bonus = #{bonus}
    WHERE salary_id = #{salary_id}
</update>



</mapper>