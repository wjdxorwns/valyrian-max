<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
	
	<!-- DB 정보를 넣는다. -->
	
	<!-- DB접속 -->
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="com.mysql.cj.jdbc.Driver" />
		<property name="url" value="jdbc:mysql://localhost:3306/pj" />
		<property name="username" value="ictedu" />
		<property name="password" value="1111" />
	</bean>
	
	<!-- mybatis:config (mapper 위치 지정) -->
	<bean id="factoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"  />
		<property name="mapperLocations" value="classpath*:com/ict/*/repository/*_mapper.xml" />
	</bean>
	
	<!-- MyBatis을 사용할 클래스 생성-->
	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg ref="factoryBean" />
	</bean>			
	
	<!-- DAO ; 실제 개발자가 SqlSessionTemplate 사용할 클래스  -->
	<!-- 
	<bean id="bookDAO" class="com.ict.edu02.repository.BookDAO">
		<property name="sqlSessionTemplate" ref="SqlSessionTemplate" />
	</bean> 
	-->
	
	<!-- 트랜잭션 매니저 등록 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	
	<!-- @Transactioncal 을 인식하기 위한 -->
	<tx:annotation-driven transaction-manager="transactionManager"/>
	
	<!-- 컴포넌트 스캔 : Service, DAO 등록 : servlet-context.xml 에서 충돌 -->
	<context:component-scan base-package="com.ict"/>
</beans>













