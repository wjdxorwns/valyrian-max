package com.ict.project.controller;

import java.sql.Date;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.ModelAndView;

import com.ict.project.service.PersonnelService;

// 작성자: 김재겸

@Controller
public class PersonnelController {

    @Autowired
    private PersonnelService personnelservice;

    /*
      기능
      1. 출퇴근 도장 기능
      2. 오늘의 할일 달력(TO DO 달력) 기능
      3. 근무 방식 및 희망 근무지 기능
      4. 내 월급 리스트 확인 기능
      5. 휴가 신청 기능
      6. 공지사항 기능
    */

    @GetMapping("/attendance")
    public ModelAndView AttendancePageGO() {
        return new ModelAndView("MainPage/attendance");
    }
    
    // 출근 도장
    @GetMapping("/attendance")
    public ModelAndView attendancePageGO() {
        return new ModelAndView("MainPage/attendance");
    }

    // 직원 - 급여 조회 진입 (JSP: pay.jsp)
    @GetMapping("/PayrollManagement")
    public ModelAndView payrollManagement(HttpSession session) {
        String emp_idx = (String) session.getAttribute("emp_idx");
        ModelAndView mv = new ModelAndView("Payment/pay");
        mv.addObject("emp_idx", emp_idx);
        return mv;
    }

    // 직원 - 급여 리스트 리다이렉트
    @GetMapping("/payrollList")
    public ModelAndView payrollListRedirect(HttpSession session) {
        String emp_idx = (String) session.getAttribute("emp_idx");
        return new ModelAndView("redirect:/paylist?emp_idx=" + emp_idx);
    }

    // 관리자 - 급여 관리 페이지 초기 진입 시 리다이렉트
    @GetMapping("/adminPay")
    public ModelAndView goToAdminPay() {
        return new ModelAndView("redirect:/admin_pay_list");
    }

    // 관리자 급여 리스트 페이지
    @GetMapping("/admin_pay_list")
    public ModelAndView adminPayList() {
        ModelAndView mv = new ModelAndView("Payment/adminPay");
        List<Map<String, Object>> employeeList = personnelservice.searchEmployeesByName("");
        mv.addObject("employeeList", employeeList);
        return mv;
    }

    // 관리자 검색
    @PostMapping("/searchEmployees")
    public ModelAndView searchEmployees(@RequestParam("searchType") String searchType,
                                        @RequestParam("searchKeyword") String searchKeyword) {
        ModelAndView mv = new ModelAndView("Payment/adminPay");
        List<Map<String, Object>> employeeList = new ArrayList<>();

        switch (searchType) {
            case "name":
                employeeList = personnelservice.searchEmployeesByName(searchKeyword);
                break;
            case "department":
                employeeList = personnelservice.searchEmployeesByDepartment(searchKeyword);
                break;
            case "position":
                employeeList = personnelservice.searchEmployeesByPosition(searchKeyword);
                break;
            default:
                mv.addObject("error", "잘못된 검색 기준입니다.");
                break;
        }

        mv.addObject("employeeList", employeeList);
        return mv;
    }
    

    // 급여 수정 페이지 진입
    @GetMapping("/pay_detail")
    public ModelAndView getPayUpdate(@RequestParam("emp_idx") String emp_idx, HttpSession session) {
        ModelAndView mv = new ModelAndView("Payment/adminPayDetailUpdate");
        if (!"ok".equals(session.getAttribute("admin"))) {
            return new ModelAndView("redirect:/index");
        }
        mv.addObject("user", personnelservice.serchpaydetail(emp_idx));
        return mv;
    }

    // 급여 삽입 페이지 진입
    @GetMapping("/pay_insert")
    public ModelAndView getPayInsert(@RequestParam("emp_idx") String emp_idx, HttpSession session) {
        ModelAndView mv = new ModelAndView("Payment/adminPayDetailInsert");
        if (!"ok".equals(session.getAttribute("admin"))) {
            return new ModelAndView("redirect:/index");
        }
        mv.addObject("user", personnelservice.serchpaydetail(emp_idx));
        return mv;
    }

    // 급여 수정
    @PostMapping("/admin_Pay_Update_Ok")
    public ModelAndView updatePay(@RequestParam Map<String, String> paramMap, HttpSession session) {
        if (!"ok".equals(session.getAttribute("admin"))) {
            return new ModelAndView("redirect:/index");
        }

        try {
            Map<String, Object> updateParams = Map.of(
                "emp_idx", paramMap.get("emp_idx"),
                "base_salary", Double.parseDouble(paramMap.get("base_salary")),
                "bonus", Double.parseDouble(paramMap.get("bonus")),
                "payment_date", Date.valueOf(paramMap.get("payment_date"))
            );

            personnelservice.updatePay(updateParams);

            Map<String, Object> empParams = new HashMap<>();
            empParams.put("emp_idx", paramMap.get("emp_idx"));
            empParams.put("pay", updateParams.get("base_salary"));
            personnelservice.updateEmployeePay(empParams);

        } catch (Exception e) {
            e.printStackTrace();
        }

        return new ModelAndView("redirect:/admin_pay_list");
    }

    // 급여 삽입
    @PostMapping("/admin_Pay_Insert_Ok")
    public ModelAndView insertPay(@RequestParam Map<String, String> paramMap, HttpSession session) {
        if (!"ok".equals(session.getAttribute("admin"))) {
            return new ModelAndView("redirect:/index");
        }

        try {
            String emp_idx = paramMap.get("emp_idx");
            double base_salary = Double.parseDouble(paramMap.get("base_salary"));
            double bonus = Double.parseDouble(paramMap.get("bonus"));
            Date payment_date = Date.valueOf(paramMap.get("payment_date"));

            if (base_salary <= 0 || personnelservice.isPayRecordExists(emp_idx, payment_date)) {
                return new ModelAndView("redirect:/admin_pay_list");
            }

            Map<String, Object> insertParams = Map.of(
                "emp_idx", emp_idx,
                "base_salary", base_salary,
                "bonus", bonus,
                "payment_date", payment_date
            );

            personnelservice.insertPay(insertParams);

            Map<String, Object> empParams = Map.of("emp_idx", emp_idx, "pay", base_salary);
            personnelservice.updateEmployeePay(empParams);

        } catch (Exception e) {
            e.printStackTrace();
        }

        return new ModelAndView("redirect:/admin_pay_list");
    }

    // 내 급여 리스트 조회
    @GetMapping("/paylist")
    public ModelAndView getPayList(@RequestParam("emp_idx") String emp_idx,
                                   @RequestParam(value = "payment_date", required = false) String payment_date) {
        ModelAndView mv = new ModelAndView("Payment/pay");
        Map<String, Object> params = new HashMap<>();
        params.put("emp_idx", emp_idx);

        if (payment_date != null && !payment_date.isEmpty()) {
            if (payment_date.length() == 7) payment_date += "-01";
            params.put("payment_date", payment_date);
        }

        List<Map<String, Object>> paylist = personnelservice.serchpaylist(params);
        mv.addObject("paylist", paylist);
        return mv;
    }

    // 직원용 pay.jsp 직접 접근
    @GetMapping("/pay")
    public ModelAndView getPayPage(HttpSession session) {
        String emp_idx = (String) session.getAttribute("emp_idx");
        ModelAndView mv = new ModelAndView("Payment/pay");
        mv.addObject("emp_idx", emp_idx);
        return mv;
    }
}

