/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.102
 * Generated at: 2025-04-17 07:47:50 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class login_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>3부창조 - 로그인</title>\r\n");
      out.write("<link href=\"https://fonts.googleapis.com/css2?family=Roboto&display=swap\" rel=\"stylesheet\">\r\n");
      out.write("<style>\r\n");
      out.write("* {\r\n");
      out.write("	box-sizing: border-box;\r\n");
      out.write("	font-family: 'Roboto', sans-serif;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("body, html {\r\n");
      out.write("	margin: 0;\r\n");
      out.write("	padding: 0;\r\n");
      out.write("	height: 100vh;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("body {\r\n");
      out.write("	background-image: url('https://images.unsplash.com/photo-1608889175626-2a2f464f2130');\r\n");
      out.write("	background-size: cover;\r\n");
      out.write("	background-position: center;\r\n");
      out.write("	display: flex;\r\n");
      out.write("	justify-content: flex-end;\r\n");
      out.write("	align-items: center;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".login-container {\r\n");
      out.write("	width: 320px;\r\n");
      out.write("	background-color: rgba(0, 160, 255, 0.85); /* 더 흐리게 */\r\n");
      out.write("	border-radius: 30px;\r\n");
      out.write("	padding: 40px 30px;\r\n");
      out.write("	margin-right: 60px;\r\n");
      out.write("	color: white;\r\n");
      out.write("	box-shadow: 0 4px 20px rgba(0,0,0,0.3); /* 그림자 */\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".logo {\r\n");
      out.write("	text-align: center;\r\n");
      out.write("	margin-bottom: 20px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".logo img {\r\n");
      out.write("	width: 50px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".logo h2 {\r\n");
      out.write("	margin: 5px 0;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("h3 {\r\n");
      out.write("	text-align: center;\r\n");
      out.write("	margin-bottom: 30px;\r\n");
      out.write("	line-height: 1.4;\r\n");
      out.write("	font-size: 22px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("input[type=\"email\"], input[type=\"password\"] {\r\n");
      out.write("	width: 100%;\r\n");
      out.write("	padding: 10px;\r\n");
      out.write("	margin-bottom: 15px;\r\n");
      out.write("	border: none;\r\n");
      out.write("	border-radius: 5px;\r\n");
      out.write("	font-size: 14px;\r\n");
      out.write("	box-shadow: inset 0 0 5px rgba(0,0,0,0.2);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".login-btn {\r\n");
      out.write("	width: 100%;\r\n");
      out.write("	padding: 10px;\r\n");
      out.write("	background-color: navy;\r\n");
      out.write("	color: white;\r\n");
      out.write("	font-size: 16px;\r\n");
      out.write("	border: none;\r\n");
      out.write("	border-radius: 5px;\r\n");
      out.write("	margin-bottom: 15px;\r\n");
      out.write("	cursor: pointer;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".social-btn {\r\n");
      out.write("	width: 100%;\r\n");
      out.write("	padding: 10px;\r\n");
      out.write("	margin-top: 8px;\r\n");
      out.write("	border: none;\r\n");
      out.write("	border-radius: 5px;\r\n");
      out.write("	font-size: 14px;\r\n");
      out.write("	cursor: pointer;\r\n");
      out.write("	display: flex;\r\n");
      out.write("	align-items: center;\r\n");
      out.write("	justify-content: center;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".social-google {\r\n");
      out.write("	background-color: white;\r\n");
      out.write("	color: black;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".social-kakao {\r\n");
      out.write("	background-color: #FEE500;\r\n");
      out.write("	color: black;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".social-naver {\r\n");
      out.write("	background-color: #03C75A;\r\n");
      out.write("	color: white;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".social-btn img {\r\n");
      out.write("	width: 20px;\r\n");
      out.write("	height: 20px;\r\n");
      out.write("	margin-right: 8px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".signup {\r\n");
      out.write("	text-align: center;\r\n");
      out.write("	margin-top: 10px;\r\n");
      out.write("	font-size: 12px;\r\n");
      out.write("	color: #eee;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("a {\r\n");
      out.write("	color: #fff;\r\n");
      out.write("	text-decoration: underline;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<div class=\"login-container\">\r\n");
      out.write("		<div class=\"logo\">\r\n");
      out.write("			<img src=\"https://cdn-icons-png.flaticon.com/512/709/709579.png\" alt=\"로고\" />\r\n");
      out.write("			<h2>3부창조</h2>\r\n");
      out.write("		</div>\r\n");
      out.write("		<h3>Create<br>Account</h3>\r\n");
      out.write("		\r\n");
      out.write("		<form name=\"loginForm\" onsubmit=\"return validateForm()\" action=\"loginProcess\" method=\"post\">\r\n");
      out.write("			<input type=\"email\" name=\"email\" placeholder=\"이메일\" required />\r\n");
      out.write("			<input type=\"password\" name=\"password\" placeholder=\"비밀번호\" required />\r\n");
      out.write("			<button type=\"submit\" class=\"login-btn\">로그인</button>\r\n");
      out.write("		</form>\r\n");
      out.write("\r\n");
      out.write("		<div class=\"signup\">\r\n");
      out.write("			계정이 없으신가요? <a href=\"signup\">가입하기</a>\r\n");
      out.write("		</div>\r\n");
      out.write("\r\n");
      out.write("		<button class=\"social-btn social-google\">\r\n");
      out.write("			<img src=\"https://cdn-icons-png.flaticon.com/512/281/281764.png\" alt=\"Google 아이콘\" /> Google로 시작하기\r\n");
      out.write("		</button>\r\n");
      out.write("		<button class=\"social-btn social-kakao\">\r\n");
      out.write("			<img src=\"https://cdn-icons-png.flaticon.com/512/2111/2111493.png\" alt=\"Kakao 아이콘\" /> 카카오로 시작하기\r\n");
      out.write("		</button>\r\n");
      out.write("		<button class=\"social-btn social-naver\">\r\n");
      out.write("			<img src=\"https://cdn-icons-png.flaticon.com/512/2175/2175377.png\" alt=\"Naver 아이콘\" /> 네이버로 시작하기\r\n");
      out.write("		</button>\r\n");
      out.write("	</div>\r\n");
      out.write("\r\n");
      out.write("	<script>\r\n");
      out.write("		function validateForm() {\r\n");
      out.write("			const email = document.loginForm.email.value;\r\n");
      out.write("			const password = document.loginForm.password.value;\r\n");
      out.write("			if (!email || !password) {\r\n");
      out.write("				alert(\"이메일과 비밀번호를 모두 입력해주세요.\");\r\n");
      out.write("				return false;\r\n");
      out.write("			}\r\n");
      out.write("			return true;\r\n");
      out.write("		}\r\n");
      out.write("	</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
