/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.102
 * Generated at: 2025-05-13 12:08:46 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.PersonnelManagement.EmpManagement;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class empDataRegister_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1743573402475L));
    _jspx_dependants.put("jar:file:/D:/workspaces/pj/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/project/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("<!-- 작성자 : \n");
      out.write("\n");
      out.write("수정해야할 것들\n");
      out.write("\n");
      out.write("1. 직원 이미지 : 파일 크기 설정값 없앨 것 \n");
      out.write("2. 직원 번호 : 고용타입(정규직, 계약직, 아르바이트) 에 따라 다르게 설정되도록 할것 ex). 정규직 : E000 / 계약직 : T000 / 아르바이트 : P000 (수정완료)\n");
      out.write("3. 직책 : 드롭 다운으로 사원, 대리, 과장, 차장, 부장, 전무, 대표 (수정완료)\n");
      out.write("4. 아이디 : 이메일 형식으로 입력 되도록 할 것 (수정완료)\n");
      out.write("5. 성별 : \"남성\", \"여성\"으로 <select><option>으로 드롭 다운 만들기 (* DB에 입력될 때는  남성 : 0, 여성 : 1) (수정완료)\n");
      out.write("6. 휴대전화 번호 : 중복확인 추가 (수정완료)\n");
      out.write("7. 주소, 상세주소 : 주소 검색 api를 사용할 것  (수정완료)\n");
      out.write("8. \"퇴사자, 퇴사일자, 계정상태\" 등록 화면에서 없앨 것 (수정완료)\n");
      out.write("9. 확인 버튼 : 컨트롤러에 확인(submit) 받는 로직 추가\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("*추가* \n");
      out.write("직원등록 후 생성된 emp_idx가 request 등 다른 DB 테이블과도 연결돼야 한다. \n");
      out.write("-->\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html lang=\"ko\">\n");
      out.write("<head>\n");
      out.write("<meta charset=\"UTF-8\">\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n");
      out.write("<meta name=\"description\" content=\"3부상조 - 직원등록(관리자)\">\n");
      out.write("<title>3부상조 - 직원등록(관리자)</title>\n");
      out.write("<link\n");
      out.write("	href=\"https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;700&display=swap\"\n");
      out.write("	rel=\"stylesheet\">\n");
      out.write("<link href=\"");
      if (_jspx_meth_c_005furl_005f0(_jspx_page_context))
        return;
      out.write("\" rel=\"stylesheet\">\n");
      out.write("<link href=\"");
      if (_jspx_meth_c_005furl_005f1(_jspx_page_context))
        return;
      out.write("\" rel=\"stylesheet\">\n");
      out.write("<link href=\"");
      if (_jspx_meth_c_005furl_005f2(_jspx_page_context))
        return;
      out.write("\" rel=\"stylesheet\">\n");
      out.write("<link href=\"");
      if (_jspx_meth_c_005furl_005f3(_jspx_page_context))
        return;
      out.write("\"\n");
      out.write("	rel=\"stylesheet\">\n");
      out.write("<link href=\"");
      if (_jspx_meth_c_005furl_005f4(_jspx_page_context))
        return;
      out.write("\"\n");
      out.write("	rel=\"stylesheet\">\n");
      out.write("<link href=\"");
      if (_jspx_meth_c_005furl_005f5(_jspx_page_context))
        return;
      out.write("\"\n");
      out.write("	rel=\"stylesheet\">\n");
      out.write("<!-- Font Awesome for social icons -->\n");
      out.write("<link rel=\"stylesheet\"\n");
      out.write("	href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css\">\n");
      out.write("<script\n");
      out.write("	src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js\"></script>\n");
      out.write("<script\n");
      out.write("	src=\"//t1.daumcdn.net/mapjsapi/bundle/postcode/prod/postcode.v2.js\"></script>\n");
      out.write("<style type=\"text/css\">\n");
      out.write("/* 전체 컨테이너 스타일 */\n");
      out.write(".profile-container {\n");
      out.write("    max-width: 1300px;\n");
      out.write("    max-height: 1300px;\n");
      out.write("    margin: 0 auto;\n");
      out.write("    padding: 20px;\n");
      out.write("    background-color: #fff;\n");
      out.write("    box-shadow: 0 0 10px rgba(0,0,0,0.1);\n");
      out.write("    border-radius: 8px;\n");
      out.write("}\n");
      out.write("\n");
      out.write("/* 헤더 스타일 */\n");
      out.write(".profile-container h2 {\n");
      out.write("    color: #333;\n");
      out.write("    margin-bottom: 10px;\n");
      out.write("    font-size: 24px;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".profile-container h4 {\n");
      out.write("    color: #666;\n");
      out.write("    margin-bottom: 30px;\n");
      out.write("    font-size: 16px;\n");
      out.write("    font-weight: normal;\n");
      out.write("}\n");
      out.write("\n");
      out.write("/* 프로필 헤더 섹션 */\n");
      out.write(".profile-header {\n");
      out.write("    display: flex;\n");
      out.write("    gap: 30px;\n");
      out.write("    margin-bottom: 40px;\n");
      out.write("    padding: 20px;\n");
      out.write("    background-color: #f8f9fa;\n");
      out.write("    border-radius: 8px;\n");
      out.write("}\n");
      out.write("\n");
      out.write("/* 프로필 이미지 박스 */\n");
      out.write(".profile-box {\n");
      out.write("    width: 200px;\n");
      out.write("    text-align: center;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".profile-img {\n");
      out.write("    width: 180px;\n");
      out.write("    height: 200px;\n");
      out.write("    border: 1px solid #ddd;\n");
      out.write("    border-radius: 4px;\n");
      out.write("    overflow: hidden;\n");
      out.write("    margin-bottom: 10px;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".profile-img img {\n");
      out.write("    width: 100%;\n");
      out.write("    height: 100%;\n");
      out.write("    object-fit: cover;\n");
      out.write("}\n");
      out.write("\n");
      out.write("/* 섹션 스타일 */\n");
      out.write(".section {\n");
      out.write("    flex: 1;\n");
      out.write("    display: flex;\n");
      out.write("    flex-direction: column;\n");
      out.write("    gap: 15px;\n");
      out.write("}\n");
      out.write("\n");
      out.write("/* 행 스타일 */\n");
      out.write(".row, .row01, .row02 {\n");
      out.write("    display: flex;\n");
      out.write("    align-items: center;\n");
      out.write("    gap: 56px;\n");
      out.write("    margin-bottom: 15px;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".row0{\n");
      out.write("	display: flex;\n");
      out.write("    align-items: center;\n");
      out.write("    gap: 56px;\n");
      out.write("    margin-bottom: 15px;\n");
      out.write("    margin-left: 28px;\n");
      out.write("    margin-top: 30px;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".row00{\n");
      out.write("    display: flex;\n");
      out.write("    align-items: center;\n");
      out.write("    gap: 56px;\n");
      out.write("    margin-bottom: 15px;\n");
      out.write("    margin-right: 119px;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".row label, .row01 label, .row02 label .row0 label .row00 label {\n");
      out.write("    width: 100px;\n");
      out.write("    font-weight: bold;\n");
      out.write("    color: #333;\n");
      out.write("}\n");
      out.write("\n");
      out.write("/* 입력 필드 스타일 */\n");
      out.write("input[type=\"text\"],\n");
      out.write("input[type=\"date\"],\n");
      out.write("input[type=\"number\"],\n");
      out.write("select {\n");
      out.write("    height: 35px;\n");
      out.write("    padding: 0 10px;\n");
      out.write("    border: 1px solid #ddd;\n");
      out.write("    border-radius: 4px;\n");
      out.write("    box-sizing: border-box;\n");
      out.write("    width: 200px;\n");
      out.write("}\n");
      out.write("\n");
      out.write("/* 이메일 입력 그룹 */\n");
      out.write(".email-input-group {\n");
      out.write("    display: flex;\n");
      out.write("    gap: 5px;\n");
      out.write("    align-items: center;\n");
      out.write("    flex-wrap: wrap;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".email-input-group input[type=\"text\"] {\n");
      out.write("    width: 150px;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".email-input-group select {\n");
      out.write("    width: 120px;\n");
      out.write("}\n");
      out.write("\n");
      out.write("#custom_domain {\n");
      out.write("    width: 150px;\n");
      out.write("}\n");
      out.write("\n");
      out.write("/* 전화번호 입력 그룹 */\n");
      out.write(".phone-input-group {\n");
      out.write("    display: flex;\n");
      out.write("    gap: 5px;\n");
      out.write("    align-items: center;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".phone-input-group input[type=\"text\"] {\n");
      out.write("    width: 60px;\n");
      out.write("    text-align: center;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".phone-input-group span {\n");
      out.write("    font-weight: bold;\n");
      out.write("    color: #666;\n");
      out.write("}\n");
      out.write("\n");
      out.write("/* 중복확인 결과 메시지 */\n");
      out.write("#email_check_result,\n");
      out.write("#phone_check_result {\n");
      out.write("    font-size: 0.9em;\n");
      out.write("    margin-left: 10px;\n");
      out.write("    display: inline-block;\n");
      out.write("}\n");
      out.write("\n");
      out.write("/* 테이블 스타일 */\n");
      out.write(".form-table {\n");
      out.write("    width: 100%;\n");
      out.write("    border-collapse: collapse;\n");
      out.write("    margin-bottom: 30px;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".form-table td {\n");
      out.write("    padding: 15px;\n");
      out.write("    vertical-align: middle;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".form-table label {\n");
      out.write("    font-weight: bold;\n");
      out.write("    color: #333;\n");
      out.write("    display: block;\n");
      out.write("    margin-bottom: 5px;\n");
      out.write("}\n");
      out.write("\n");
      out.write("/* 버튼 스타일 */\n");
      out.write(".directory-btn {\n");
      out.write("    text-align: right;\n");
      out.write("    margin-bottom: 20px;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".directory-btn button,\n");
      out.write(".update-btn button {\n");
      out.write("    padding: 8px 20px;\n");
      out.write("    border: none;\n");
      out.write("    border-radius: 4px;\n");
      out.write("    cursor: pointer;\n");
      out.write("    font-weight: bold;\n");
      out.write("    transition: background-color 0.3s;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".directory-btn button {\n");
      out.write("    background-color: #6c757d;\n");
      out.write("    color: white;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".update-btn {\n");
      out.write("    text-align: center;\n");
      out.write("    margin-top: 30px;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".update-btn button {\n");
      out.write("    background-color: #007bff;\n");
      out.write("    color: white;\n");
      out.write("    padding: 10px 30px;\n");
      out.write("    font-size: 16px;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".directory-btn button:hover {\n");
      out.write("    background-color: #5a6268;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".update-btn button:hover {\n");
      out.write("    background-color: #0056b3;\n");
      out.write("}\n");
      out.write("\n");
      out.write("/* 주소 검색 버튼 */\n");
      out.write("input[type=\"button\"][value=\"주소찾기\"] {\n");
      out.write("    background-color: #28a745;\n");
      out.write("    color: white;\n");
      out.write("    border: none;\n");
      out.write("    padding: 8px 15px;\n");
      out.write("    border-radius: 4px;\n");
      out.write("    cursor: pointer;\n");
      out.write("    margin-left: 10px;\n");
      out.write("}\n");
      out.write("\n");
      out.write("input[type=\"button\"][value=\"주소찾기\"]:hover {\n");
      out.write("    background-color: #218838;\n");
      out.write("}\n");
      out.write("\n");
      out.write("/* 파일 업로드 스타일 */\n");
      out.write("input[type=\"file\"] {\n");
      out.write("    width: 100%;\n");
      out.write("    margin-top: 10px;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".update-btn-fixed {\n");
      out.write("    width: 100%;\n");
      out.write("    display: flex;\n");
      out.write("    justify-content: center;\n");
      out.write("    align-items: center;\n");
      out.write("    margin: 40px 0 0 0;\n");
      out.write("    padding-bottom: 40px;\n");
      out.write("    background: transparent;\n");
      out.write("}\n");
      out.write(".update-btn-fixed button {\n");
      out.write("    background-color: #007bff;\n");
      out.write("    color: white;\n");
      out.write("    padding: 10px 30px;\n");
      out.write("    font-size: 16px;\n");
      out.write("    border: none;\n");
      out.write("    border-radius: 4px;\n");
      out.write("    font-weight: bold;\n");
      out.write("    cursor: pointer;\n");
      out.write("    transition: background-color 0.3s;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".update-btn-fixed button:hover {\n");
      out.write("    background-color: #0056b3;\n");
      out.write("}\n");
      out.write("\n");
      out.write("button {\n");
      out.write("    width: 100px;\n");
      out.write("    height: 50px;\n");
      out.write("    margin-left: 5px;\n");
      out.write("}\n");
      out.write("\n");
      out.write("</style>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("	<!-- Header -->\n");
      out.write("	");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/resources/jsp/Header.jsp", out, false);
      out.write("\n");
      out.write("\n");
      out.write("	<!-- Aside -->\n");
      out.write("	");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/resources/jsp/EmpDataAside.jsp", out, false);
      out.write("\n");
      out.write("	<!-- Main Content -->\n");
      out.write("	<main>\n");
      out.write("\n");
      out.write("		<div class=\"profile-container\">\n");
      out.write("			<h2>직원정보 등록</h2>\n");
      out.write("			<h4>관리자가 임직원의 인사정보 등록 및 관리</h4>\n");
      out.write("			<form\n");
      out.write("				action=\"");
      if (_jspx_meth_c_005furl_005f6(_jspx_page_context))
        return;
      out.write("\"\n");
      out.write("				method=\"post\" enctype=\"multipart/form-data\"\n");
      out.write("				onsubmit=\"return validateForm();\">\n");
      out.write("				<!-- Action Buttons -->\n");
      out.write("				<div class=\"directory-btn\">\n");
      out.write("					<button type=\"button\" onclick=\"goToTheList()\">목록</button>\n");
      out.write("				</div>\n");
      out.write("				<div class=\"profile-header\">\n");
      out.write("					<div class=\"profile-box\">\n");
      out.write("						<div class=\"profile-img\">\n");
      out.write("							<img id=\"profilePreview\" src=\"#\" alt=\"미리보기\"\n");
      out.write("								style=\"width: 180px; height: 200px; display: none;\">\n");
      out.write("						</div>\n");
      out.write("						<div>\n");
      out.write("							<input type=\"file\" id=\"profile-photo\" name=\"profileImg\"\n");
      out.write("								accept=\"image/*\" onchange=\"previewImage(this, 'profilePreview')\">\n");
      out.write("						</div>\n");
      out.write("					</div>\n");
      out.write("					<div class=\"section\">\n");
      out.write("						<div class=\"row\">\n");
      out.write("							<label>직원 이름</label> <input type=\"text\" name=\"emp_name\"\n");
      out.write("								id=\"emp_name\" value=\"\" placeholder=\"직원 이름입력\" required>\n");
      out.write("							<label>직원번호</label> <input type=\"text\" name=\"emp_id\" id=\"emp_id\"\n");
      out.write("								value=\"\" placeholder=\"고용타입 선택 시 자동 생성\" readonly>\n");
      out.write("						</div>\n");
      out.write("						<div class=\"row\">\n");
      out.write("							<label>부서 이름</label> <select name=\"team\" id=\"team\">\n");
      out.write("								<option selected>부서 선택</option>\n");
      out.write("								<option>인사1팀</option>\n");
      out.write("								<option>인사2팀</option>\n");
      out.write("								<option>인사3팀</option>\n");
      out.write("							</select>\n");
      out.write("							<label>직책</label> \n");
      out.write("							<select name=\"position\" id=\"position\">\n");
      out.write("								<option selected>직책 선택</option>\n");
      out.write("								<option>사원</option>\n");
      out.write("								<option>대리</option>\n");
      out.write("								<option>과장</option>\n");
      out.write("								<option>차장</option>\n");
      out.write("								<option>부장</option>\n");
      out.write("								<option>전무</option>\n");
      out.write("								<option>대표</option>\n");
      out.write("							</select>\n");
      out.write("						</div>\n");
      out.write("						<div class=\"row\">\n");
      out.write("								<label>고용타입</label>\n");
      out.write("								<select name=\"employment_type\" id=\"employment_type\">\n");
      out.write("									<option selected>고용타입 선택</option>\n");
      out.write("									<option value=\"정규직\">정규직</option>\n");
      out.write("									<option value=\"계약직\">계약직</option>\n");
      out.write("									<option value=\"아르바이트\">아르바이트</option>\n");
      out.write("								</select>\n");
      out.write("								<label>근무방식</label>\n");
      out.write("								<select name=\"attitude_type\" id=\"attitude_type\">\n");
      out.write("									<option selected>근무방식 선택</option>\n");
      out.write("									<option>회사</option>\n");
      out.write("									<option>출장</option>\n");
      out.write("									<option>재택</option>\n");
      out.write("								</select>\n");
      out.write("						</div>\n");
      out.write("						<div class=\"row0\">\n");
      out.write("							<label>아이디</label>\n");
      out.write("							<div class=\"email-input-group\" style=\"flex:1;\">\n");
      out.write("								<input type=\"text\" name=\"email_id\" id=\"email_id\" \n");
      out.write("									placeholder=\"이메일 아이디\" required>\n");
      out.write("								<select name=\"email_domain\" id=\"email_domain\" required>\n");
      out.write("									<option value=\"\">도메인 선택</option>\n");
      out.write("									<option value=\"@gmail.com\">@gmail.com</option>\n");
      out.write("									<option value=\"@naver.com\">@naver.com</option>\n");
      out.write("									<option value=\"@hanmail.com\">@hanmail.com</option>\n");
      out.write("									<option value=\"@nate.com\">@nate.com</option>\n");
      out.write("									<option value=\"custom\">직접 입력</option>\n");
      out.write("								</select>\n");
      out.write("								<input type=\"text\" name=\"custom_domain\" id=\"custom_domain\" \n");
      out.write("									style=\"display: none;\" placeholder=\"도메인 입력\">\n");
      out.write("								<input type=\"hidden\" name=\"emp_email\" id=\"emp_email\">\n");
      out.write("							</div>\n");
      out.write("							<span id=\"email_check_result\" style=\"color: #666; margin-left: 10px;\"></span>\n");
      out.write("							</div>\n");
      out.write("							<div class=\"row00\">\n");
      out.write("							<label>비밀번호</label> <input type=\"text\" name=\"emp_password\"\n");
      out.write("								id=\"emp_password\" value=\"\" placeholder=\"비밀번호 입력\" required>\n");
      out.write("						</div>\n");
      out.write("					</div>\n");
      out.write("				</div>\n");
      out.write("\n");
      out.write("				<!-- 직원 상세정보  -->\n");
      out.write("				<h2>직원 상세정보</h2>\n");
      out.write("				<div id=\"basic\" class=\"tab-content active\">\n");
      out.write("					<table class=\"form-table\">\n");
      out.write("						<tr>\n");
      out.write("							<td><label>생년월일</label></td>\n");
      out.write("							<td><input type=\"date\" name=\"birthday\" id=\"birthday\"\n");
      out.write("								value=\"\" required></td>\n");
      out.write("							<td><label>성별</label></td>\n");
      out.write("							<td><select name=\"gender\" id=\"gender\">\n");
      out.write("									<option selected>성별 선택</option>\n");
      out.write("									<option value=\"0\">남성</option>\n");
      out.write("									<option value=\"1\">여성</option>\n");
      out.write("							</select></td>\n");
      out.write("							<td><label>휴대전화번호</label></td>\n");
      out.write("							<td>\n");
      out.write("								<div class=\"phone-input-group\">\n");
      out.write("									<input type=\"text\" name=\"phone1\" id=\"phone1\" maxlength=\"3\" placeholder=\"010\" required>\n");
      out.write("									<span>-</span>\n");
      out.write("									<input type=\"text\" name=\"phone2\" id=\"phone2\" maxlength=\"4\" placeholder=\"0000\" required>\n");
      out.write("									<span>-</span>\n");
      out.write("									<input type=\"text\" name=\"phone3\" id=\"phone3\" maxlength=\"4\" placeholder=\"0000\" required>\n");
      out.write("									<input type=\"hidden\" name=\"phone_number\" id=\"phone_number\">\n");
      out.write("								</div>\n");
      out.write("								<span id=\"phone_check_result\" style=\"color: #666; margin-left: 10px;\"></span>\n");
      out.write("							</td>\n");
      out.write("						</tr>\n");
      out.write("						<tr>\n");
      out.write("							<td><label>주소</label></td>\n");
      out.write("							<td><input type=\"text\" name=\"home\" id=\"home\" value=\"\"\n");
      out.write("								placeholder=\"주소 입력\" required> <input type=\"button\"\n");
      out.write("								value=\"주소찾기\" onclick=\"execDaumPostcode()\"></td>\n");
      out.write("							<td><label>상세주소</label></td>\n");
      out.write("							<td colspan=\"3\"><input id=\"addr\" name=\"detail_home\"\n");
      out.write("								id=\"detail_home\" value=\"\" placeholder=\"상세주소 입력\" style=\"width:100%\"></td>\n");
      out.write("						</tr>\n");
      out.write("						<tr>\n");
      out.write("							<td><label>입사일</label></td>\n");
      out.write("							<td><input type=\"date\" name=\"hire_date\" id=\"hire_date\"\n");
      out.write("								value=\"\"></td>\n");
      out.write("							<td><label>근무지</label></td>\n");
      out.write("							<td><input type=\"text\" name=\"location\" id=\"location\"\n");
      out.write("								value=\"\" placeholder=\"보직이동에서 입력한 값\"></td>\n");
      out.write("							<td><label>년차</label></td>\n");
      out.write("							<td><input type=\"number\" name=\"pay_grade\" id=\"pay_grade\"\n");
      out.write("								value=\"\" placeholder=\"년차 입력\"></td>\n");
      out.write("						</tr>\n");
      out.write("					</table>\n");
      out.write("				</div>\n");
      out.write("				<!-- Action Buttons -->\n");
      out.write("				<div class=\"update-btn-fixed\">\n");
      out.write("					<button type=\"submit\" name=\"action\" value=\"submit\">확인</button>\n");
      out.write("				</div>\n");
      out.write("			</form>\n");
      out.write("		</div>\n");
      out.write("	</main>\n");
      out.write("	<!-- Footer -->\n");
      out.write("	");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/resources/jsp/Footer.jsp", out, false);
      out.write("\n");
      out.write("	<script type=\"text/javascript\">\n");
      out.write("	$(document).ready(function() {\n");
      out.write("	    // 이메일 도메인 선택 처리\n");
      out.write("	    $(\"#email_domain\").on(\"change\", function() {\n");
      out.write("	        var customDomain = $(\"#custom_domain\");\n");
      out.write("	        \n");
      out.write("	        if ($(this).val() === \"custom\") {\n");
      out.write("	            customDomain.show();\n");
      out.write("	            customDomain.prop(\"required\", true);\n");
      out.write("	            customDomain.focus();\n");
      out.write("	        } else {\n");
      out.write("	            customDomain.hide();\n");
      out.write("	            customDomain.prop(\"required\", false);\n");
      out.write("	            checkEmailDuplicate();\n");
      out.write("	        }\n");
      out.write("	    });\n");
      out.write("\n");
      out.write("	    // 이메일 아이디 입력 처리\n");
      out.write("	    $(\"#email_id\").on(\"input\", function() {\n");
      out.write("	        checkEmailDuplicate();\n");
      out.write("	    });\n");
      out.write("\n");
      out.write("	    // 커스텀 도메인 입력 처리\n");
      out.write("	    $(\"#custom_domain\").on(\"input\", function() {\n");
      out.write("	        checkEmailDuplicate();\n");
      out.write("	    });\n");
      out.write("\n");
      out.write("	    // 핸드폰 번호 입력 처리\n");
      out.write("	    $(\"#phone1, #phone2, #phone3\").on(\"input\", function() {\n");
      out.write("	        // 숫자만 입력 가능하도록\n");
      out.write("	        this.value = this.value.replace(/[^0-9]/g, '');\n");
      out.write("	        \n");
      out.write("	        // 자동으로 다음 입력필드로 이동\n");
      out.write("	        if (this.value.length === this.maxLength) {\n");
      out.write("	            if (this.id === \"phone1\") {\n");
      out.write("	                $(\"#phone2\").focus();\n");
      out.write("	            } else if (this.id === \"phone2\") {\n");
      out.write("	                $(\"#phone3\").focus();\n");
      out.write("	            }\n");
      out.write("	        }\n");
      out.write("	        \n");
      out.write("	        checkPhoneDuplicate();\n");
      out.write("	    });\n");
      out.write("	});\n");
      out.write("\n");
      out.write("	// 이메일 중복 확인 함수\n");
      out.write("	function checkEmailDuplicate() {\n");
      out.write("	    var emailId = $(\"#email_id\").val();\n");
      out.write("	    var domainSelect = $(\"#email_domain\");\n");
      out.write("	    var customDomain = $(\"#custom_domain\");\n");
      out.write("	    var resultSpan = $(\"#email_check_result\");\n");
      out.write("	    \n");
      out.write("	    if (!emailId) {\n");
      out.write("	        resultSpan.text(\"\");\n");
      out.write("	        return;\n");
      out.write("	    }\n");
      out.write("	    \n");
      out.write("	    var domain = domainSelect.val();\n");
      out.write("	    if (domain === \"custom\") {\n");
      out.write("	        domain = customDomain.val();\n");
      out.write("	        if (!domain) {\n");
      out.write("	            resultSpan.text(\"\");\n");
      out.write("	            return;\n");
      out.write("	        }\n");
      out.write("	    }\n");
      out.write("	    \n");
      out.write("	    if (!domain) {\n");
      out.write("	        resultSpan.text(\"\");\n");
      out.write("	        return;\n");
      out.write("	    }\n");
      out.write("	    \n");
      out.write("	    var fullEmail = emailId + domain;\n");
      out.write("	    $(\"#emp_email\").val(fullEmail);\n");
      out.write("	    \n");
      out.write("	    // 중복 확인 AJAX 요청\n");
      out.write("	    $.ajax({\n");
      out.write("	        url: \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/checkDuplicate\",\n");
      out.write("	        type: \"GET\",\n");
      out.write("	        data: {\n");
      out.write("	            field: \"emp_email\",\n");
      out.write("	            value: fullEmail\n");
      out.write("	        },\n");
      out.write("	        success: function(response) {\n");
      out.write("	            if (response.error) {\n");
      out.write("	                resultSpan.text(response.error).css(\"color\", \"red\");\n");
      out.write("	            } else if (response.duplicate) {\n");
      out.write("	                resultSpan.text(\"이미 사용중인 이메일입니다.\").css(\"color\", \"red\");\n");
      out.write("	            } else {\n");
      out.write("	                resultSpan.text(\"사용 가능한 이메일입니다.\").css(\"color\", \"green\");\n");
      out.write("	            }\n");
      out.write("	        },\n");
      out.write("	        error: function() {\n");
      out.write("	            resultSpan.text(\"중복확인 중 오류가 발생했습니다.\").css(\"color\", \"red\");\n");
      out.write("	        }\n");
      out.write("	    });\n");
      out.write("	}\n");
      out.write("	\n");
      out.write("	// 핸드폰 번호 중복 확인 함수\n");
      out.write("	function checkPhoneDuplicate() {\n");
      out.write("	    var phone1 = $(\"#phone1\").val();\n");
      out.write("	    var phone2 = $(\"#phone2\").val();\n");
      out.write("	    var phone3 = $(\"#phone3\").val();\n");
      out.write("	    var resultSpan = $(\"#phone_check_result\");\n");
      out.write("	    \n");
      out.write("	    // 모든 필드가 채워졌는지 확인\n");
      out.write("	    if (phone1.length !== 3 || phone2.length !== 4 || phone3.length !== 4) {\n");
      out.write("	        resultSpan.text(\"\");\n");
      out.write("	        return;\n");
      out.write("	    }\n");
      out.write("	    \n");
      out.write("	    var fullPhone = phone1 + \"-\" + phone2 + \"-\" + phone3;\n");
      out.write("	    $(\"#phone_number\").val(fullPhone);\n");
      out.write("	    \n");
      out.write("	    // 중복 확인 AJAX 요청\n");
      out.write("	    $.ajax({\n");
      out.write("	        url: \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/checkDuplicate\",\n");
      out.write("	        type: \"GET\",\n");
      out.write("	        data: {\n");
      out.write("	            field: \"phone_number\",\n");
      out.write("	            value: fullPhone\n");
      out.write("	        },\n");
      out.write("	        success: function(response) {\n");
      out.write("	            if (response.error) {\n");
      out.write("	                resultSpan.text(response.error).css(\"color\", \"red\");\n");
      out.write("	            } else if (response.duplicate) {\n");
      out.write("	                resultSpan.text(\"이미 사용중인 전화번호입니다.\").css(\"color\", \"red\");\n");
      out.write("	            } else {\n");
      out.write("	                resultSpan.text(\"사용 가능한 전화번호입니다.\").css(\"color\", \"green\");\n");
      out.write("	            }\n");
      out.write("	        },\n");
      out.write("	        error: function() {\n");
      out.write("	            resultSpan.text(\"중복확인 중 오류가 발생했습니다.\").css(\"color\", \"red\");\n");
      out.write("	        }\n");
      out.write("	    });\n");
      out.write("	}\n");
      out.write("	\n");
      out.write("	function goToTheList() {\n");
      out.write("	    window.location.href = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/PersonnelManagement/EmpManagement/empDataList\";\n");
      out.write("	}\n");
      out.write("\n");
      out.write("	function validateForm() {\n");
      out.write("	    const empName = document.querySelector(\"input[name='emp_name']\");\n");
      out.write("	    const userId = document.querySelector(\"input[name='emp_email']\");\n");
      out.write("	    const password = document.querySelector(\"input[name='emp_password']\");\n");
      out.write("\n");
      out.write("	    if (!empName.value.trim() || !userId.value.trim() || !password.value.trim()) {\n");
      out.write("	        alert(\"직원 이름, 이메일, 비밀번호는 필수 입력입니다.\");\n");
      out.write("	        return false;\n");
      out.write("	    }\n");
      out.write("	    return true;\n");
      out.write("	}\n");
      out.write("	// 사진 미리보기\n");
      out.write("	function previewImage(input, targetId) {\n");
      out.write("	    const file = input.files[0];\n");
      out.write("	    if (file) {\n");
      out.write("	        const reader = new FileReader();\n");
      out.write("	        reader.onload = function(e) {\n");
      out.write("	            const img = document.getElementById(targetId);\n");
      out.write("	            if (img) {\n");
      out.write("	                img.src = e.target.result;\n");
      out.write("	                img.style.display = \"block\";\n");
      out.write("	            }\n");
      out.write("	        };\n");
      out.write("	        reader.readAsDataURL(file);\n");
      out.write("	    }\n");
      out.write("	}\n");
      out.write("	// 주소 찾기\n");
      out.write("	function execDaumPostcode() {\n");
      out.write("	    new daum.Postcode({\n");
      out.write("	        oncomplete: function(data) {\n");
      out.write("	            $(\"#home\").val(data.address);\n");
      out.write("	        }\n");
      out.write("	    }).open();\n");
      out.write("	}\n");
      out.write("	</script>\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005furl_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f0 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    _jspx_th_c_005furl_005f0.setPageContext(_jspx_page_context);
    _jspx_th_c_005furl_005f0.setParent(null);
    // /WEB-INF/views/PersonnelManagement/EmpManagement/empDataRegister.jsp(35,12) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005furl_005f0.setValue("/resources/css/Main.css");
    int _jspx_eval_c_005furl_005f0 = _jspx_th_c_005furl_005f0.doStartTag();
    if (_jspx_th_c_005furl_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      return true;
    }
    _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f0);
    return false;
  }

  private boolean _jspx_meth_c_005furl_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f1 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    _jspx_th_c_005furl_005f1.setPageContext(_jspx_page_context);
    _jspx_th_c_005furl_005f1.setParent(null);
    // /WEB-INF/views/PersonnelManagement/EmpManagement/empDataRegister.jsp(36,12) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005furl_005f1.setValue("/resources/css/Header.css");
    int _jspx_eval_c_005furl_005f1 = _jspx_th_c_005furl_005f1.doStartTag();
    if (_jspx_th_c_005furl_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      return true;
    }
    _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f1);
    return false;
  }

  private boolean _jspx_meth_c_005furl_005f2(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f2 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    _jspx_th_c_005furl_005f2.setPageContext(_jspx_page_context);
    _jspx_th_c_005furl_005f2.setParent(null);
    // /WEB-INF/views/PersonnelManagement/EmpManagement/empDataRegister.jsp(37,12) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005furl_005f2.setValue("/resources/css/Footer.css");
    int _jspx_eval_c_005furl_005f2 = _jspx_th_c_005furl_005f2.doStartTag();
    if (_jspx_th_c_005furl_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      return true;
    }
    _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f2);
    return false;
  }

  private boolean _jspx_meth_c_005furl_005f3(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f3 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    _jspx_th_c_005furl_005f3.setPageContext(_jspx_page_context);
    _jspx_th_c_005furl_005f3.setParent(null);
    // /WEB-INF/views/PersonnelManagement/EmpManagement/empDataRegister.jsp(38,12) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005furl_005f3.setValue("resources/css/KimKS/CSS_pop_up.css");
    int _jspx_eval_c_005furl_005f3 = _jspx_th_c_005furl_005f3.doStartTag();
    if (_jspx_th_c_005furl_005f3.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      return true;
    }
    _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f3);
    return false;
  }

  private boolean _jspx_meth_c_005furl_005f4(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f4 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    _jspx_th_c_005furl_005f4.setPageContext(_jspx_page_context);
    _jspx_th_c_005furl_005f4.setParent(null);
    // /WEB-INF/views/PersonnelManagement/EmpManagement/empDataRegister.jsp(40,12) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005furl_005f4.setValue("resources/css/KimKS/CSS_origin.css");
    int _jspx_eval_c_005furl_005f4 = _jspx_th_c_005furl_005f4.doStartTag();
    if (_jspx_th_c_005furl_005f4.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      return true;
    }
    _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f4);
    return false;
  }

  private boolean _jspx_meth_c_005furl_005f5(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f5 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    _jspx_th_c_005furl_005f5.setPageContext(_jspx_page_context);
    _jspx_th_c_005furl_005f5.setParent(null);
    // /WEB-INF/views/PersonnelManagement/EmpManagement/empDataRegister.jsp(42,12) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005furl_005f5.setValue("resources/css/KimKS/CSS_detail.css");
    int _jspx_eval_c_005furl_005f5 = _jspx_th_c_005furl_005f5.doStartTag();
    if (_jspx_th_c_005furl_005f5.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      return true;
    }
    _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f5);
    return false;
  }

  private boolean _jspx_meth_c_005furl_005f6(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f6 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    _jspx_th_c_005furl_005f6.setPageContext(_jspx_page_context);
    _jspx_th_c_005furl_005f6.setParent(null);
    // /WEB-INF/views/PersonnelManagement/EmpManagement/empDataRegister.jsp(332,12) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005furl_005f6.setValue("/empDataRegister");
    int _jspx_eval_c_005furl_005f6 = _jspx_th_c_005furl_005f6.doStartTag();
    if (_jspx_th_c_005furl_005f6.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      return true;
    }
    _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f6);
    return false;
  }
}
