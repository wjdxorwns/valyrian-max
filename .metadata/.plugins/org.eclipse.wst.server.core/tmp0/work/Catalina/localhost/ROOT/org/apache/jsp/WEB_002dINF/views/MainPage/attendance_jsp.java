/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.102
 * Generated at: 2025-05-13 08:46:21 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.MainPage;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class attendance_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1743573402475L));
    _jspx_dependants.put("jar:file:/D:/workspaces/pj/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/project/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fif_0026_005ftest;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.release();
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>근태 관리 시스템 - 메인 페이지</title>\r\n");
      out.write("<link href=\"https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;700&display=swap\" rel=\"stylesheet\">\r\n");
      out.write("<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js\"></script>\r\n");
      out.write("<link href=\"");
      if (_jspx_meth_c_005furl_005f0(_jspx_page_context))
        return;
      out.write("\" rel=\"stylesheet\">\r\n");
      out.write("<link href=\"");
      if (_jspx_meth_c_005furl_005f1(_jspx_page_context))
        return;
      out.write("\" rel=\"stylesheet\">\r\n");
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write("body {\r\n");
      out.write("    margin: 0;\r\n");
      out.write("    font-family: 'Roboto', sans-serif;\r\n");
      out.write("    background-color: #f9f9f9;\r\n");
      out.write("    color: #333;\r\n");
      out.write("}\r\n");
      out.write("main {\r\n");
      out.write("    padding: 2rem;\r\n");
      out.write("    max-width: 1200px;\r\n");
      out.write("    margin: auto;\r\n");
      out.write("}\r\n");
      out.write(".clock-container {\r\n");
      out.write("    text-align: center;\r\n");
      out.write("    margin-bottom: 2rem;\r\n");
      out.write("    margin-top: 80px;\r\n");
      out.write("}\r\n");
      out.write(".clock {\r\n");
      out.write("    font-size: 48px;\r\n");
      out.write("    font-weight: bold;\r\n");
      out.write("    color: #2c3e50;\r\n");
      out.write("}\r\n");
      out.write(".card-container {\r\n");
      out.write("    display: flex;\r\n");
      out.write("    justify-content: space-around;\r\n");
      out.write("    margin-bottom: 2rem;\r\n");
      out.write("    flex-wrap: wrap;\r\n");
      out.write("    gap: 1.5rem;\r\n");
      out.write("}\r\n");
      out.write(".attendance-card {\r\n");
      out.write("    background-color: #ffffff;\r\n");
      out.write("    border-radius: 16px;\r\n");
      out.write("    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\r\n");
      out.write("    padding: 2rem;\r\n");
      out.write("    flex: 1;\r\n");
      out.write("    min-width: 260px;\r\n");
      out.write("    max-width: 360px;\r\n");
      out.write("    text-align: center;\r\n");
      out.write("    transition: transform 0.2s ease;\r\n");
      out.write("}\r\n");
      out.write(".attendance-card:hover {\r\n");
      out.write("    transform: translateY(-5px);\r\n");
      out.write("}\r\n");
      out.write(".icon-wrapper {\r\n");
      out.write("    margin-bottom: 1rem;\r\n");
      out.write("}\r\n");
      out.write(".icon {\r\n");
      out.write("    font-size: 40px;\r\n");
      out.write("    display: inline-block;\r\n");
      out.write("    padding: 1rem;\r\n");
      out.write("    border-radius: 50%;\r\n");
      out.write("    color: white;\r\n");
      out.write("}\r\n");
      out.write(".checkin-icon {\r\n");
      out.write("    background-color: #27ae60;\r\n");
      out.write("}\r\n");
      out.write(".checkout-icon {\r\n");
      out.write("    background-color: #c0392b;\r\n");
      out.write("}\r\n");
      out.write(".attendance-card h2 {\r\n");
      out.write("    margin: 1rem 0;\r\n");
      out.write("}\r\n");
      out.write(".btn {\r\n");
      out.write("    background-color: #3498db;\r\n");
      out.write("    color: white;\r\n");
      out.write("    padding: 0.75rem 1.5rem;\r\n");
      out.write("    font-size: 16px;\r\n");
      out.write("    border: none;\r\n");
      out.write("    border-radius: 8px;\r\n");
      out.write("    cursor: pointer;\r\n");
      out.write("    transition: background 0.3s;\r\n");
      out.write("}\r\n");
      out.write(".btn:hover {\r\n");
      out.write("    background-color: #2980b9;\r\n");
      out.write("}\r\n");
      out.write(".weekly-attendance-section {\r\n");
      out.write("    margin-top: 3rem;\r\n");
      out.write("    background-color: #fff;\r\n");
      out.write("    border-radius: 12px;\r\n");
      out.write("    padding: 1.5rem 2rem;\r\n");
      out.write("    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.06);\r\n");
      out.write("}\r\n");
      out.write(".weekly-attendance-section h3 {\r\n");
      out.write("    margin-bottom: 1rem;\r\n");
      out.write("    font-size: 20px;\r\n");
      out.write("    border-bottom: 2px solid #ddd;\r\n");
      out.write("    padding-bottom: 0.5rem;\r\n");
      out.write("}\r\n");
      out.write(".attendance-table-container {\r\n");
      out.write("    max-height: 400px;\r\n");
      out.write("    overflow-y: auto;\r\n");
      out.write("    margin-top: 1rem;\r\n");
      out.write("}\r\n");
      out.write(".attendance-table {\r\n");
      out.write("    width: 100%;\r\n");
      out.write("    border-collapse: collapse;\r\n");
      out.write("}\r\n");
      out.write(".attendance-table th, .attendance-table td {\r\n");
      out.write("    padding: 0.75rem;\r\n");
      out.write("    text-align: left;\r\n");
      out.write("    border-bottom: 1px solid #eee;\r\n");
      out.write("}\r\n");
      out.write(".attendance-table th {\r\n");
      out.write("    background-color: #f8f9fa;\r\n");
      out.write("    font-weight: 600;\r\n");
      out.write("    position: sticky;\r\n");
      out.write("    top: 0;\r\n");
      out.write("    z-index: 10;\r\n");
      out.write("}\r\n");
      out.write(".attendance-table tr:hover {\r\n");
      out.write("    background-color: #f1f3f5;\r\n");
      out.write("}\r\n");
      out.write(".attendance-table td {\r\n");
      out.write("    font-size: 14px;\r\n");
      out.write("    color: #555;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/resources/jsp/Header.jsp", out, false);
      out.write("\r\n");
      out.write("    <main>\r\n");
      out.write("        <section class=\"attendance-section\">\r\n");
      out.write("            <div class=\"clock-container\">\r\n");
      out.write("                <div class=\"clock\" id=\"current-time\">00:00:00</div>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"card-container\">\r\n");
      out.write("                <div class=\"attendance-card\">\r\n");
      out.write("                    <div class=\"icon-wrapper\">\r\n");
      out.write("                        <span class=\"icon checkin-icon\">↓</span>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <h2>출근하기</h2>\r\n");
      out.write("                    <button class=\"btn\" onclick=\"recordCheckin()\" aria-label=\"출근 등록\">출근 등록</button>\r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"attendance-card\">\r\n");
      out.write("                    <div class=\"icon-wrapper\">\r\n");
      out.write("                        <span class=\"icon checkout-icon\">↑</span>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <h2>퇴근하기</h2>\r\n");
      out.write("                    <button class=\"btn\" onclick=\"recordCheckout()\" aria-label=\"퇴근 등록\">퇴근 등록</button>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("        </section>\r\n");
      out.write("        <section class=\"weekly-attendance-section\">\r\n");
      out.write("            <h3>나의 근태 현황</h3>\r\n");
      out.write("            <div class=\"attendance-table-container\">\r\n");
      out.write("                <table class=\"attendance-table\">\r\n");
      out.write("                    <thead>\r\n");
      out.write("                        <tr>\r\n");
      out.write("                            <th>직원 이름</th>\r\n");
      out.write("                            <th>날짜</th>\r\n");
      out.write("                            <th>출근 시간</th>\r\n");
      out.write("                            <th>퇴근 시간</th>\r\n");
      out.write("                            <th>출근 타입</th>\r\n");
      out.write("                        </tr>\r\n");
      out.write("                    </thead>\r\n");
      out.write("                    <tbody id=\"weekly-attendance-body\"></tbody>\r\n");
      out.write("                </table>\r\n");
      out.write("            </div>\r\n");
      out.write("        </section>\r\n");
      out.write("        ");
      if (_jspx_meth_c_005fif_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("    </main>\r\n");
      out.write("    ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/resources/jsp/Footer.jsp", out, false);
      out.write("\r\n");
      out.write("    <script>\r\n");
      out.write("        // 실시간 시계 업데이트\r\n");
      out.write("        function updateClock() {\r\n");
      out.write("            const now = new Date();\r\n");
      out.write("            const hours = String(now.getHours()).padStart(2, '0');\r\n");
      out.write("            const minutes = String(now.getMinutes()).padStart(2, '0');\r\n");
      out.write("            const seconds = String(now.getSeconds()).padStart(2, '0');\r\n");
      out.write("            document.getElementById('current-time').textContent = `");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${hours}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(':');
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${minutes}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(':');
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${seconds}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("`;\r\n");
      out.write("        }\r\n");
      out.write("        setInterval(updateClock, 1000);\r\n");
      out.write("        updateClock();\r\n");
      out.write("\r\n");
      out.write("        // 근태 데이터 가져오기\r\n");
      out.write("        function fetchAttendanceData(url, tableBodyId) {\r\n");
      out.write("    $.ajax({\r\n");
      out.write("        url: url,\r\n");
      out.write("        type: 'GET',\r\n");
      out.write("        xhrFields: { withCredentials: true },\r\n");
      out.write("        success: function(data) {\r\n");
      out.write("            console.log('서버에서 받은 데이터:', data); // 디버깅용 로그 추가\r\n");
      out.write("            \r\n");
      out.write("            const tableBody = document.getElementById(tableBodyId);\r\n");
      out.write("            tableBody.innerHTML = '';\r\n");
      out.write("\r\n");
      out.write("            // 데이터 형식 검증: 배열인지 확인\r\n");
      out.write("            if (!Array.isArray(data)) {\r\n");
      out.write("                console.warn('데이터가 배열 형식이 아닙니다. 데이터를 배열로 변환합니다.');\r\n");
      out.write("                data = [data]; // 객체를 배열로 변환\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            // 데이터가 비어 있는 경우 처리\r\n");
      out.write("            if (data.length === 0) {\r\n");
      out.write("                console.warn('데이터가 비어있습니다.');\r\n");
      out.write("                const emptyRow = document.createElement('tr');\r\n");
      out.write("                emptyRow.innerHTML = `<td colspan=\"5\" style=\"text-align:center;\">데이터가 없습니다.</td>`;\r\n");
      out.write("                tableBody.appendChild(emptyRow);\r\n");
      out.write("                return;\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            // 데이터 렌더링\r\n");
      out.write("            data.forEach(record => {\r\n");
      out.write("                console.log('현재 데이터 레코드:', record); // 각 레코드 디버깅용 로그\r\n");
      out.write("\r\n");
      out.write("                const row = document.createElement('tr');\r\n");
      out.write("                row.innerHTML = \r\n");
      out.write("                    '<td>' + (record.emp_name || '-') + '</td>' +\r\n");
      out.write("                    '<td>' + (record.work_date || '-') + '</td>' +\r\n");
      out.write("                    '<td>' + (record.start_time ? record.start_time.substring(0, 8) : '-') + '</td>' +\r\n");
      out.write("                    '<td>' + (record.end_time ? record.end_time.substring(0, 8) : '-') + '</td>' +\r\n");
      out.write("                    '<td>' + (record.worktype || '-') + '</td>';\r\n");
      out.write("                tableBody.appendChild(row);\r\n");
      out.write("            });\r\n");
      out.write("        },\r\n");
      out.write("        error: function(xhr, status, error) {\r\n");
      out.write("            console.error('데이터 가져오기 실패:', error, xhr.status, xhr.responseJSON);\r\n");
      out.write("\r\n");
      out.write("            // 에러 메시지를 사용자에게 명확히 전달\r\n");
      out.write("            const errorMessage = xhr.responseJSON?.error || `HTTP 상태 코드: ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${xhr.status}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("`;\r\n");
      out.write("            alert(`데이터를 가져오는데 실패했습니다: ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${errorMessage}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("`);\r\n");
      out.write("        }\r\n");
      out.write("    });\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("        // 출근 기록 함수\r\n");
      out.write("        function recordCheckin() {\r\n");
      out.write("            $.ajax({\r\n");
      out.write("                url: '/attendance/checkin',\r\n");
      out.write("                type: 'POST',\r\n");
      out.write("                xhrFields: { withCredentials: true },\r\n");
      out.write("                success: function(response) {\r\n");
      out.write("                    alert('출근이 등록되었습니다.');\r\n");
      out.write("                    fetchAttendanceData('/attendance/weekly', 'weekly-attendance-body');\r\n");
      out.write("                },\r\n");
      out.write("                error: function(xhr, status, error) {\r\n");
      out.write("                    console.error('출근 등록에 실패했습니다:', error, xhr.status, xhr.responseJSON);\r\n");
      out.write("                    alert('출근 등록에 실패했습니다: ' + (xhr.responseJSON?.error || xhr.status));\r\n");
      out.write("                }\r\n");
      out.write("            });\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        // 퇴근 기록 함수\r\n");
      out.write("        function recordCheckout() {\r\n");
      out.write("            $.ajax({\r\n");
      out.write("                url: '/attendance/checkout',\r\n");
      out.write("                type: 'POST',\r\n");
      out.write("                xhrFields: { withCredentials: true },\r\n");
      out.write("                success: function(response) {\r\n");
      out.write("                    alert('퇴근이 등록되었습니다.');\r\n");
      out.write("                    fetchAttendanceData('/attendance/weekly', 'weekly-attendance-body');\r\n");
      out.write("                },\r\n");
      out.write("                error: function(xhr, status, error) {\r\n");
      out.write("                    console.error('퇴근 등록에 실패했습니다:', error, xhr.status, xhr.responseJSON);\r\n");
      out.write("                    alert('퇴근 등록에 실패했습니다: ' + (xhr.responseJSON?.error || xhr.status));\r\n");
      out.write("                }\r\n");
      out.write("            });\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        // 페이지 로드 시 데이터 가져오기\r\n");
      out.write("        $(document).ready(function() {\r\n");
      out.write("            fetchAttendanceData('/attendance/weekly', 'weekly-attendance-body');\r\n");
      out.write("            if (\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sessionScope['user.admin']}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" === \"ok\") {\r\n");
      out.write("                fetchAttendanceData('/attendance/today', 'employee-attendance-body');\r\n");
      out.write("            }\r\n");
      out.write("        });\r\n");
      out.write("    </script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005furl_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f0 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    _jspx_th_c_005furl_005f0.setPageContext(_jspx_page_context);
    _jspx_th_c_005furl_005f0.setParent(null);
    // /WEB-INF/views/MainPage/attendance.jsp(10,12) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005furl_005f0.setValue("/resources/css/Header.css");
    int _jspx_eval_c_005furl_005f0 = _jspx_th_c_005furl_005f0.doStartTag();
    if (_jspx_th_c_005furl_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      return true;
    }
    _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f0);
    return false;
  }

  private boolean _jspx_meth_c_005furl_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f1 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    _jspx_th_c_005furl_005f1.setPageContext(_jspx_page_context);
    _jspx_th_c_005furl_005f1.setParent(null);
    // /WEB-INF/views/MainPage/attendance.jsp(11,12) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005furl_005f1.setValue("/resources/css/Footer.css");
    int _jspx_eval_c_005furl_005f1 = _jspx_th_c_005furl_005f1.doStartTag();
    if (_jspx_th_c_005furl_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      return true;
    }
    _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f1);
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f0 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    _jspx_th_c_005fif_005f0.setPageContext(_jspx_page_context);
    _jspx_th_c_005fif_005f0.setParent(null);
    // /WEB-INF/views/MainPage/attendance.jsp(172,8) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fif_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sessionScope['user.admin'] == 'ok'}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
    int _jspx_eval_c_005fif_005f0 = _jspx_th_c_005fif_005f0.doStartTag();
    if (_jspx_eval_c_005fif_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
      do {
        out.write("\r\n");
        out.write("            <section>\r\n");
        out.write("                <h2 class=\"section-title\">직원 근태 현황 (오늘)</h2>\r\n");
        out.write("                <div class=\"table-container\">\r\n");
        out.write("                    <table class=\"attendance-table\">\r\n");
        out.write("                        <thead>\r\n");
        out.write("                            <tr>\r\n");
        out.write("                                <th>직원 이름</th>\r\n");
        out.write("                                <th>날짜</th>\r\n");
        out.write("                                <th>출근 시간</th>\r\n");
        out.write("                                <th>퇴근 시간</th>\r\n");
        out.write("                                <th>출근 타입</th>\r\n");
        out.write("                            </tr>\r\n");
        out.write("                        </thead>\r\n");
        out.write("                        <tbody id=\"employee-attendance-body\"></tbody>\r\n");
        out.write("                    </table>\r\n");
        out.write("                </div>\r\n");
        out.write("            </section>\r\n");
        out.write("        ");
        int evalDoAfterBody = _jspx_th_c_005fif_005f0.doAfterBody();
        if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
          break;
      } while (true);
    }
    if (_jspx_th_c_005fif_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
    return false;
  }
}
