/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.102
 * Generated at: 2025-04-17 07:42:41 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>3부상조 - 메인 페이지</title>\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("/* Reset default styles */\r\n");
      out.write("* {\r\n");
      out.write("    margin: 0;\r\n");
      out.write("    padding: 0;\r\n");
      out.write("    box-sizing: border-box;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("body {\r\n");
      out.write("    font-family: 'Arial', sans-serif;\r\n");
      out.write("    line-height: 1.6;\r\n");
      out.write("    background-color: #f0f8ff; /* Light sky blue background */\r\n");
      out.write("    color: #333;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* Header Styles */\r\n");
      out.write("header {\r\n");
      out.write("    background-color: #87ceeb; /* Light sky blue theme */\r\n");
      out.write("    padding: 1rem 2rem;\r\n");
      out.write("    display: flex;\r\n");
      out.write("    justify-content: space-between;\r\n");
      out.write("    align-items: center;\r\n");
      out.write("    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#logo a {\r\n");
      out.write("    color: #fff;\r\n");
      out.write("    text-decoration: none;\r\n");
      out.write("    font-size: 1.5rem;\r\n");
      out.write("    font-weight: bold;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".header-links a {\r\n");
      out.write("    color: #fff;\r\n");
      out.write("    text-decoration: none;\r\n");
      out.write("    margin-left: 1rem;\r\n");
      out.write("    font-size: 1rem;\r\n");
      out.write("    transition: all 0.3s ease;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".header-links a:hover {\r\n");
      out.write("    color: #e0f4ff; /* Very light sky blue on hover */\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* Hero Section */\r\n");
      out.write(".hero-section {\r\n");
      out.write("    position: relative;\r\n");
      out.write("    height: 70vh;\r\n");
      out.write("    background: linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)), url('https://images.unsplash.com/photo-1600585154340-be6161a56a0c?ixlib=rb-4.0.3&auto=format&fit=crop&w=1350&q=80') no-repeat center center/cover;\r\n");
      out.write("    display: flex;\r\n");
      out.write("    justify-content: center;\r\n");
      out.write("    align-items: center;\r\n");
      out.write("    text-align: center;\r\n");
      out.write("    color: #fff;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".hero-content {\r\n");
      out.write("    background-color: rgba(255, 255, 255, 0.9);\r\n");
      out.write("    padding: 2rem 3rem;\r\n");
      out.write("    border-radius: 8px;\r\n");
      out.write("    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n");
      out.write("    max-width: 600px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".hero-content h1 {\r\n");
      out.write("    font-size: 2rem;\r\n");
      out.write("    color: #333;\r\n");
      out.write("    margin-bottom: 1rem;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".hero-content p {\r\n");
      out.write("    font-size: 1.1rem;\r\n");
      out.write("    color: #666;\r\n");
      out.write("    margin-bottom: 1.5rem;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".hero-content .btn {\r\n");
      out.write("    display: inline-block;\r\n");
      out.write("    padding: 0.75rem 1.5rem;\r\n");
      out.write("    background-color: #87ceeb; /* Light sky blue theme */\r\n");
      out.write("    color: #fff;\r\n");
      out.write("    text-decoration: none;\r\n");
      out.write("    border-radius: 4px;\r\n");
      out.write("    transition: all 0.3s ease;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".hero-content .btn:hover {\r\n");
      out.write("    background-color: #6ab7d5; /* Slightly darker sky blue on hover */\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* Connection Section */\r\n");
      out.write(".connection-section {\r\n");
      out.write("    background-color: #333;\r\n");
      out.write("    padding: 3rem 2rem;\r\n");
      out.write("    text-align: center;\r\n");
      out.write("    color: #fff;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".connection-section h2 {\r\n");
      out.write("    font-size: 1.5rem;\r\n");
      out.write("    margin-bottom: 2rem;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".connection-box {\r\n");
      out.write("    background-color: #555;\r\n");
      out.write("    height: 200px;\r\n");
      out.write("    max-width: 800px;\r\n");
      out.write("    margin: 0 auto;\r\n");
      out.write("    border-radius: 8px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* Footer */\r\n");
      out.write("footer {\r\n");
      out.write("    background-color: #87ceeb; /* Light sky blue theme */\r\n");
      out.write("    padding: 1rem;\r\n");
      out.write("    text-align: center;\r\n");
      out.write("    color: #fff;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("footer p {\r\n");
      out.write("    font-size: 1rem;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* Responsive Design */\r\n");
      out.write("@media (max-width: 768px) {\r\n");
      out.write("    header {\r\n");
      out.write("        flex-direction: column;\r\n");
      out.write("        gap: 1rem;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .header-links {\r\n");
      out.write("        display: flex;\r\n");
      out.write("        gap: 1rem;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .hero-section {\r\n");
      out.write("        height: 50vh;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .hero-content {\r\n");
      out.write("        padding: 1.5rem;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .hero-content h1 {\r\n");
      out.write("        font-size: 1.5rem;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .hero-content p {\r\n");
      out.write("        font-size: 1rem;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .connection-section {\r\n");
      out.write("        padding: 2rem 1rem;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .connection-box {\r\n");
      out.write("        height: 150px;\r\n");
      out.write("    }\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    <!-- Header -->\r\n");
      out.write("    <header>\r\n");
      out.write("        <div id=\"logo\"><a href=\"/\">3부상조</a></div>\r\n");
      out.write("        <div class=\"header-links\">\r\n");
      out.write("            <a href=\"#\">공지사항</a>\r\n");
      out.write("            <a href=\"login\">로그인</a>\r\n");
      out.write("            <a href=\"#\">개인정보</a>\r\n");
      out.write("        </div>\r\n");
      out.write("    </header>\r\n");
      out.write("\r\n");
      out.write("    <!-- Hero Section -->\r\n");
      out.write("    <section class=\"hero-section\">\r\n");
      out.write("        <div class=\"hero-content\">\r\n");
      out.write("            <h1>차별화된 시스템으로 우수한 서비스를 지원</h1>\r\n");
      out.write("            <p>3부상조<br>완벽한 비즈니스 파트너</p>\r\n");
      out.write("            <a href=\"#\" class=\"btn\">시작하기</a>\r\n");
      out.write("        </div>\r\n");
      out.write("    </section>\r\n");
      out.write("\r\n");
      out.write("    <!-- Connection Section -->\r\n");
      out.write("    <section class=\"connection-section\">\r\n");
      out.write("        <h2>connection</h2>\r\n");
      out.write("        <div class=\"connection-box\"></div>\r\n");
      out.write("    </section>\r\n");
      out.write("\r\n");
      out.write("    <!-- Footer -->\r\n");
      out.write("    <footer>\r\n");
      out.write("        <p>푸터</p>\r\n");
      out.write("    </footer>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
