/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.102
 * Generated at: 2025-05-13 12:08:00 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.MainPage;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1743573402475L));
    _jspx_dependants.put("jar:file:/D:/workspaces/pj/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/project/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>트라이어드 솔루션 - 비즈니스 플랫폼</title>\r\n");
      out.write("<!-- 폰트 로드 -->\r\n");
      out.write("<link\r\n");
      out.write("	href=\"https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;700&display=swap\"\r\n");
      out.write("	rel=\"stylesheet\">\r\n");
      out.write("<!-- Font Awesome for social icons -->\r\n");
      out.write("<link rel=\"stylesheet\"\r\n");
      out.write("	href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css\">\r\n");
      out.write("<!-- CSS 파일 링크 -->\r\n");
      out.write("<link href=\"");
      if (_jspx_meth_c_005furl_005f0(_jspx_page_context))
        return;
      out.write("\"\r\n");
      out.write("	rel=\"stylesheet\">\r\n");
      out.write("<link href=\"");
      if (_jspx_meth_c_005furl_005f1(_jspx_page_context))
        return;
      out.write("\"\r\n");
      out.write("	rel=\"stylesheet\">\r\n");
      out.write("<link href=\"");
      if (_jspx_meth_c_005furl_005f2(_jspx_page_context))
        return;
      out.write("\" rel=\"stylesheet\">\r\n");
      out.write("<style>\r\n");
      out.write("/* 중요 공지사항 배지 스타일 */\r\n");
      out.write(".importance-badge {\r\n");
      out.write("	background-color: #ff6b6b;\r\n");
      out.write("	color: #fff;\r\n");
      out.write("	padding: 0.2rem 0.5rem;\r\n");
      out.write("	border-radius: 4px;\r\n");
      out.write("	font-size: 0.8rem;\r\n");
      out.write("	margin-left: 0.5rem;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("<script src=\"https://code.jquery.com/jquery-3.6.0.min.js\"></script>\r\n");
      out.write("<script>\r\n");
      out.write("	// 페이지 로드 후 Ajax 요청을 통해 공지사항 불러오기\r\n");
      out.write("	$(document).ready(function() {\r\n");
      out.write("		fetchNotices();\r\n");
      out.write("	});\r\n");
      out.write("\r\n");
      out.write("	function fetchNotices() {\r\n");
      out.write("		$\r\n");
      out.write("				.ajax({\r\n");
      out.write("					url : '");
      if (_jspx_meth_c_005furl_005f3(_jspx_page_context))
        return;
      out.write("', // Ajax 요청 URL\r\n");
      out.write("					type : 'GET',\r\n");
      out.write("					dataType : 'json',\r\n");
      out.write("					success : function(response) {\r\n");
      out.write("						console.log(\"AJAX 응답 데이터:\", response); // 디버깅용: 응답 데이터 전체 확인\r\n");
      out.write("						let noticeList = response.notices;\r\n");
      out.write("						let lastUpdateDate = response.lastUpdateDate;\r\n");
      out.write("\r\n");
      out.write("						// 최신 업데이트 시간 표시\r\n");
      out.write("						if (lastUpdateDate) {\r\n");
      out.write("							$('.txt-sub3').text('최신 업데이트: ' + lastUpdateDate);\r\n");
      out.write("						} else {\r\n");
      out.write("							$('.txt-sub3').text('최신 업데이트 정보가 없습니다.');\r\n");
      out.write("						}\r\n");
      out.write("\r\n");
      out.write("						// 공지사항 목록 생성\r\n");
      out.write("						let postList = $('.post-list');\r\n");
      out.write("						postList.empty(); // 기존 리스트 초기화\r\n");
      out.write("\r\n");
      out.write("						if (noticeList && noticeList.length > 0) {\r\n");
      out.write("							// 상위 3개만 가져오기\r\n");
      out.write("							let latestThreeNotices = noticeList.slice(0, 3);\r\n");
      out.write("\r\n");
      out.write("							$\r\n");
      out.write("									.each(\r\n");
      out.write("											latestThreeNotices,\r\n");
      out.write("											function(index, notice) {\r\n");
      out.write("												console.log(\"처리 중인 공지사항:\",\r\n");
      out.write("														notice); // 디버깅용: 각 공지사항 객체 확인\r\n");
      out.write("												let importanceBadge = notice.importance === '중요' ? '<span class=\"importance-badge\">중요</span>'\r\n");
      out.write("														: '';\r\n");
      out.write("\r\n");
      out.write("												// created_at이 null 또는 undefined일 경우 'N/A' 처리 (필수)\r\n");
      out.write("												let createdAt = notice.created_at ? notice.created_at\r\n");
      out.write("														: 'N/A';\r\n");
      out.write("\r\n");
      out.write("												// username이 null 또는 undefined일 경우 '알 수 없음' 처리 (필수)\r\n");
      out.write("												let username = notice.username ? notice.username\r\n");
      out.write("														: '알 수 없음';\r\n");
      out.write("\r\n");
      out.write("												// 백틱 대신 문자열 연결 사용\r\n");
      out.write("												let listItem = '';\r\n");
      out.write("												listItem += '<li class=\"post-item\">';\r\n");
      out.write("												listItem += '    <a href=\"notice/detail?id='\r\n");
      out.write("														+ notice.board_id\r\n");
      out.write("														+ '\">';\r\n");
      out.write("												listItem += '        <h3 class=\"post-title\">'\r\n");
      out.write("														+ notice.title\r\n");
      out.write("														+ '</h3>';\r\n");
      out.write("												listItem += '        <p class=\"post-meta\">';\r\n");
      out.write("												listItem += '            <span>작성자: '\r\n");
      out.write("														+ username + '</span>';\r\n");
      out.write("												listItem += '            <span>작성일: '\r\n");
      out.write("														+ createdAt + '</span>';\r\n");
      out.write("												listItem += '            '\r\n");
      out.write("														+ importanceBadge;\r\n");
      out.write("												listItem += '        </p>';\r\n");
      out.write("												listItem += '    </a>';\r\n");
      out.write("												listItem += '</li>';\r\n");
      out.write("\r\n");
      out.write("												postList.append(listItem);\r\n");
      out.write("											});\r\n");
      out.write("						} else {\r\n");
      out.write("							postList\r\n");
      out.write("									.append('<li class=\"post-item\"><p>공지사항이 없습니다.</p></li>');\r\n");
      out.write("						}\r\n");
      out.write("					},\r\n");
      out.write("					error : function(xhr, status, error) {\r\n");
      out.write("						console.error('공지사항 로드 실패:', error);\r\n");
      out.write("						console.error(\"응답 텍스트:\", xhr.responseText); // 추가: 서버에서 받은 오류 응답 텍스트 확인\r\n");
      out.write("						$('.post-list')\r\n");
      out.write("								.html(\r\n");
      out.write("										'<li class=\"post-item\"><p>공지사항을 불러오는 중 오류가 발생했습니다.</p></li>');\r\n");
      out.write("					}\r\n");
      out.write("				});\r\n");
      out.write("	}\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<div class=\"wrap\">\r\n");
      out.write("		<!-- 헤더 -->\r\n");
      out.write("		");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/resources/jsp/Header.jsp", out, false);
      out.write("\r\n");
      out.write("\r\n");
      out.write("		<!-- 콘텐츠 -->\r\n");
      out.write("		<div class=\"content\">\r\n");
      out.write("			<!-- 비주얼 섹션 -->\r\n");
      out.write("			<div class=\"visual\">\r\n");
      out.write("				<div class=\"container\">\r\n");
      out.write("					<div class=\"txt-box\">\r\n");
      out.write("						<h2 class=\"txt-main\">\r\n");
      out.write("							트라이어드 솔루션<span class=\"strong\">비즈니스 플랫폼</span>\r\n");
      out.write("						</h2>\r\n");
      out.write("						<p class=\"txt-sub\">\r\n");
      out.write("							혁신적인 솔루션으로<br>당신의 비즈니스를 한 단계 업그레이드하세요.\r\n");
      out.write("						</p>\r\n");
      out.write("					</div>\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("\r\n");
      out.write("			<!-- 바로가기 섹션 -->\r\n");
      out.write("			<div class=\"shortcut\">\r\n");
      out.write("				<div class=\"container\">\r\n");
      out.write("					<ul class=\"shortcut-list clearfix\">\r\n");
      out.write("						<li class=\"shortcut-list-item\"><a\r\n");
      out.write("							href=\"calendar?emp_idx=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sessionScope.employeeVO.emp_idx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\r\n");
      out.write("								<h3 class=\"txt-main\">캘린더</h3>\r\n");
      out.write("								<p class=\"txt-sub\">\r\n");
      out.write("									트라이어드 솔루션의 캘린더로<br>일정을 효율적으로 관리하세요.\r\n");
      out.write("								</p>\r\n");
      out.write("								<p class=\"img-box\">\r\n");
      out.write("									<span class=\"screen-hidden\"></span>\r\n");
      out.write("								</p>\r\n");
      out.write("						</a></li>\r\n");
      out.write("						<li class=\"shortcut-list-item\"><a href=\"attendance\">\r\n");
      out.write("								<h3 class=\"txt-main\">근태 관리</h3>\r\n");
      out.write("								<p class=\"txt-sub\">\r\n");
      out.write("									출근 및 퇴근 시간을<br>실시간으로 간편하게 기록하세요.\r\n");
      out.write("								</p>\r\n");
      out.write("								<p class=\"img-box\">\r\n");
      out.write("									<span class=\"screen-hidden\"></span>\r\n");
      out.write("								</p>\r\n");
      out.write("						</a></li>\r\n");
      out.write("						<li class=\"shortcut-list-item\"><a href=\"electronicpayment\">\r\n");
      out.write("								<h3 class=\"txt-main\">전자 결제</h3>\r\n");
      out.write("								<p class=\"txt-sub\">\r\n");
      out.write("									빠르고 안전한<br>전자 결제 승인 프로세스를 경험하세요.\r\n");
      out.write("								</p>\r\n");
      out.write("								<p class=\"img-box\">\r\n");
      out.write("									<span class=\"screen-hidden\"></span>\r\n");
      out.write("								</p>\r\n");
      out.write("						</a></li>\r\n");
      out.write("						<li class=\"shortcut-list-item\"><a href=\"notice\">\r\n");
      out.write("								<h3 class=\"txt-main\">공지사항</h3>\r\n");
      out.write("								<p class=\"txt-sub\">\r\n");
      out.write("									최신 소식과 자료를<br>쉽게 공유하고 확인하세요.\r\n");
      out.write("								</p>\r\n");
      out.write("								<p class=\"img-box\">\r\n");
      out.write("									<span class=\"screen-hidden\"></span>\r\n");
      out.write("								</p>\r\n");
      out.write("						</a></li>\r\n");
      out.write("					</ul>\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("\r\n");
      out.write("			<!-- 최근 소식 섹션 -->\r\n");
      out.write("			<div class=\"article recent-posts\">\r\n");
      out.write("				<div class=\"container clearfix\">\r\n");
      out.write("					<div class=\"txt-box\">\r\n");
      out.write("						<span class=\"txt-sub2\">최근 소식</span>\r\n");
      out.write("						<h3 class=\"txt-main\">공지사항 업데이트</h3>\r\n");
      out.write("						<p class=\"txt-sub\">트라이어드 솔루션의 최신 공지사항을 확인하세요.</p>\r\n");
      out.write("						<span class=\"txt-sub3\">최신 업데이트 정보가 없습니다.</span>\r\n");
      out.write("					</div>\r\n");
      out.write("					<div class=\"graphic-box clearfix\">\r\n");
      out.write("						<ul class=\"post-list\">\r\n");
      out.write("							<!-- 공지사항 목록은 Ajax로 로드 -->\r\n");
      out.write("						</ul>\r\n");
      out.write("					</div>\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("\r\n");
      out.write("			<!-- 이용 절차 섹션 -->\r\n");
      out.write("			<div class=\"article info-step\">\r\n");
      out.write("				<div class=\"container clearfix\">\r\n");
      out.write("					<div class=\"txt-box\">\r\n");
      out.write("						<span class=\"txt-sub2\">트라이어드 솔루션</span>\r\n");
      out.write("						<h3 class=\"txt-main\">이용 절차</h3>\r\n");
      out.write("						<p class=\"txt-sub\">\r\n");
      out.write("							간단한 절차로<br>트라이어드 솔루션의 모든 서비스를<br>시작할 수 있습니다.\r\n");
      out.write("						</p>\r\n");
      out.write("					</div>\r\n");
      out.write("					<div class=\"graphic-box clearfix\">\r\n");
      out.write("						<div class=\"div-step\">\r\n");
      out.write("							<p class=\"step-txt\">\r\n");
      out.write("								STEP<span class=\"step-num\">01</span>\r\n");
      out.write("							</p>\r\n");
      out.write("							<p class=\"step-icon\">\r\n");
      out.write("								<img src=\"resources/images/icons8-로그인-50.png\" alt=\"로그인 아이콘\">\r\n");
      out.write("							</p>\r\n");
      out.write("							<p class=\"step-txt-sub\">\r\n");
      out.write("								트라이어드 플랫폼에<br>로그인 및 계정 등록\r\n");
      out.write("							</p>\r\n");
      out.write("						</div>\r\n");
      out.write("						<div class=\"div-step\">\r\n");
      out.write("							<p class=\"step-txt\">\r\n");
      out.write("								STEP<span class=\"step-num\">02</span>\r\n");
      out.write("							</p>\r\n");
      out.write("							<p class=\"step-icon\">\r\n");
      out.write("								<img src=\"resources/images/icons8-서비스-50.png\" alt=\"서비스 아이콘\">\r\n");
      out.write("							</p>\r\n");
      out.write("							<p class=\"step-txt-sub\">\r\n");
      out.write("								서비스 체험 및<br>기능 탐색\r\n");
      out.write("							</p>\r\n");
      out.write("						</div>\r\n");
      out.write("						<div class=\"div-step\">\r\n");
      out.write("							<p class=\"step-txt\">\r\n");
      out.write("								STEP<span class=\"step-num\">03</span>\r\n");
      out.write("							</p>\r\n");
      out.write("							<p class=\"step-icon\">\r\n");
      out.write("								<img src=\"resources/images/icons8-문서-서명-50.png\" alt=\"계약 아이콘\">\r\n");
      out.write("							</p>\r\n");
      out.write("							<p class=\"step-txt-sub\">\r\n");
      out.write("								서비스 이용<br>계약 체결\r\n");
      out.write("							</p>\r\n");
      out.write("						</div>\r\n");
      out.write("						<div class=\"div-step\">\r\n");
      out.write("							<p class=\"step-txt\">\r\n");
      out.write("								STEP<span class=\"step-num\">04</span>\r\n");
      out.write("							</p>\r\n");
      out.write("							<p class=\"step-icon\">\r\n");
      out.write("								<img src=\"resources/images/icons8-적용-스킨-타입-7-48.png\"\r\n");
      out.write("									alt=\"적용 아이콘\">\r\n");
      out.write("							</p>\r\n");
      out.write("							<p class=\"step-txt-sub\">\r\n");
      out.write("								운영 환경 적용 및<br>서비스 시작\r\n");
      out.write("							</p>\r\n");
      out.write("						</div>\r\n");
      out.write("					</div>\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("\r\n");
      out.write("			<!-- 회사 정보 섹션 -->\r\n");
      out.write("			<div class=\"article company-info\">\r\n");
      out.write("				<div class=\"container clearfix\">\r\n");
      out.write("					<div class=\"txt-box\">\r\n");
      out.write("						<span class=\"txt-sub2\">회사 정보</span>\r\n");
      out.write("						<h3 class=\"txt-main\">트라이어드 솔루션을 만나보세요</h3>\r\n");
      out.write("						<p class=\"txt-sub\">당신의 비즈니스 파트너, 트라이어드 솔루션의 위치를 확인하세요.</p>\r\n");
      out.write("					</div>\r\n");
      out.write("					<div class=\"graphic-box clearfix\">\r\n");
      out.write("						<div class=\"info-details\">\r\n");
      out.write("							<p>\r\n");
      out.write("								<strong>회사명:</strong> 트라이어드 솔루션 주식회사\r\n");
      out.write("							</p>\r\n");
      out.write("							<p>\r\n");
      out.write("								<strong>주소:</strong> 서울특별시 강남구 테헤란로 123, 5층 (역삼동, 트라이어드 타워)\r\n");
      out.write("							</p>\r\n");
      out.write("							<p>\r\n");
      out.write("								<strong>전화번호:</strong> 02-9876-5432\r\n");
      out.write("							</p>\r\n");
      out.write("							<p>\r\n");
      out.write("								<strong>이메일:</strong> contact@triadsolutions.com\r\n");
      out.write("							</p>\r\n");
      out.write("						</div>\r\n");
      out.write("						<div class=\"map-container\">\r\n");
      out.write("							<iframe\r\n");
      out.write("								src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3165.365763499896!2d127.0317673152096!3d37.49939597981169!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x357ca3f0d2b0c5b7%3A0x7e8f2b1a3c4d5e6f!2z7ISc7Jq47Yq567OE7IucIOq4iOyKpO2EsO2BrOu2gCDthYztgqTsmrTsnbwgMTIz!5e0!3m2!1sko!2skr!4v1698779876543!5m2!1sko!2skr\"></iframe>\r\n");
      out.write("						</div>\r\n");
      out.write("					</div>\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("\r\n");
      out.write("		<!-- 푸터 -->\r\n");
      out.write("		");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/resources/jsp/Footer.jsp", out, false);
      out.write("\r\n");
      out.write("	</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005furl_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f0 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    _jspx_th_c_005furl_005f0.setPageContext(_jspx_page_context);
    _jspx_th_c_005furl_005f0.setParent(null);
    // /WEB-INF/views/MainPage/index.jsp(17,12) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005furl_005f0.setValue("/resources/css/Header.css");
    int _jspx_eval_c_005furl_005f0 = _jspx_th_c_005furl_005f0.doStartTag();
    if (_jspx_th_c_005furl_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      return true;
    }
    _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f0);
    return false;
  }

  private boolean _jspx_meth_c_005furl_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f1 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    _jspx_th_c_005furl_005f1.setPageContext(_jspx_page_context);
    _jspx_th_c_005furl_005f1.setParent(null);
    // /WEB-INF/views/MainPage/index.jsp(19,12) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005furl_005f1.setValue("/resources/css/Footer.css");
    int _jspx_eval_c_005furl_005f1 = _jspx_th_c_005furl_005f1.doStartTag();
    if (_jspx_th_c_005furl_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      return true;
    }
    _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f1);
    return false;
  }

  private boolean _jspx_meth_c_005furl_005f2(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f2 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    _jspx_th_c_005furl_005f2.setPageContext(_jspx_page_context);
    _jspx_th_c_005furl_005f2.setParent(null);
    // /WEB-INF/views/MainPage/index.jsp(21,12) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005furl_005f2.setValue("/resources/css/index.css");
    int _jspx_eval_c_005furl_005f2 = _jspx_th_c_005furl_005f2.doStartTag();
    if (_jspx_th_c_005furl_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      return true;
    }
    _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f2);
    return false;
  }

  private boolean _jspx_meth_c_005furl_005f3(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f3 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    _jspx_th_c_005furl_005f3.setPageContext(_jspx_page_context);
    _jspx_th_c_005furl_005f3.setParent(null);
    // /WEB-INF/views/MainPage/index.jsp(43,12) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005furl_005f3.setValue("/notice/latest-ajax");
    int _jspx_eval_c_005furl_005f3 = _jspx_th_c_005furl_005f3.doStartTag();
    if (_jspx_th_c_005furl_005f3.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      return true;
    }
    _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f3);
    return false;
  }
}
