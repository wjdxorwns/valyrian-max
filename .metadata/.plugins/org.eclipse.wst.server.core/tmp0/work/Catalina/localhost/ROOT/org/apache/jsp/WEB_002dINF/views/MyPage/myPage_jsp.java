/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.102
 * Generated at: 2025-05-13 12:08:19 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.MyPage;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class myPage_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1743573402475L));
    _jspx_dependants.put("jar:file:/D:/workspaces/pj/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/project/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fif_0026_005ftest;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.release();
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<!-- 서명 기능을 위해 SignaturePad 라이브러리를 CDN으로 추가 -->\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/signature_pad@4.0.0/dist/signature_pad.umd.min.js\"></script>\n");
      out.write("<meta charset=\"UTF-8\">\n");
      out.write("<title>Insert title here</title>\n");
      out.write("<!-- 화면(CSS) 링크 -->\n");
      out.write("\n");
      out.write("    <link href=\"");
      if (_jspx_meth_c_005furl_005f0(_jspx_page_context))
        return;
      out.write("\" rel=\"stylesheet\">\n");
      out.write("    <link href=\"");
      if (_jspx_meth_c_005furl_005f1(_jspx_page_context))
        return;
      out.write("\" rel=\"stylesheet\">\n");
      out.write("    <link rel=\"stylesheet\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/css/KimYH/CSS_vacation.css\">\n");
      out.write("    \n");
      out.write("    <!-- 폰트 링크 -->\n");
      out.write("	<link href=\"https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;700&display=swap\" rel=\"stylesheet\">\n");
      out.write("	<!-- Font Awesome for social icons -->\n");
      out.write("	<link href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css\" rel=\"stylesheet\">\n");
      out.write("   \n");
      out.write("<style>\n");
      out.write(".container_left{\n");
      out.write("margin-left: 200px;\n");
      out.write("}\n");
      out.write("\n");
      out.write("table, th, td{\n");
      out.write("border: 1px solid black;\n");
      out.write("border-collapse: collapse;\n");
      out.write("}\n");
      out.write("th{\n");
      out.write("padding:0;\n");
      out.write("width:100px;\n");
      out.write("height:50px;\n");
      out.write("}\n");
      out.write("th img{\n");
      out.write("width:100%;\n");
      out.write("height:610%;\n");
      out.write("object-fit: cover;\n");
      out.write("display: block;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".buttons{\n");
      out.write("display:flex;\n");
      out.write("justify-content: center;\n");
      out.write("}\n");
      out.write(".buttons button{\n");
      out.write("margin:10px;\n");
      out.write("}\n");
      out.write("\n");
      out.write("/* 모달 창 */\n");
      out.write("#update_detail {\n");
      out.write("display: none;\n");
      out.write("position: fixed;\n");
      out.write("top: 50%;\n");
      out.write("left: 50%;\n");
      out.write("transform: translate(-50%, -50%);\n");
      out.write("background-color: #fff;\n");
      out.write("border: 1px solid #ccc;\n");
      out.write("padding: 20px;\n");
      out.write("z-index: 1000;\n");
      out.write("width: 400px;\n");
      out.write("max-width: 90%;\n");
      out.write("border-radius: 8px;\n");
      out.write("}\n");
      out.write("/* 모달 오버레이 */\n");
      out.write("#modal_overlay {\n");
      out.write("display: none;\n");
      out.write("position: fixed;\n");
      out.write("top: 0;\n");
      out.write("left: 0;\n");
      out.write("width: 100%;\n");
      out.write("height: 100%;\n");
      out.write("background-color: rgba(0, 0, 0, 0.5);\n");
      out.write("z-index: 999;\n");
      out.write("}\n");
      out.write(".pwup{\n");
      out.write("justify-content: center;\n");
      out.write("margin-bottom: 10px;\n");
      out.write("}\n");
      out.write(".pwup input{\n");
      out.write("width:100%;\n");
      out.write("height:30px;\n");
      out.write("}\n");
      out.write("#signature_pad{\n");
      out.write("border: 1px solid black;\n");
      out.write("width:100%;\n");
      out.write("}\n");
      out.write("\n");
      out.write("\n");
      out.write("#passwordMessage {\n");
      out.write("margin-top: 5px; /* 입력 필드와 간격 */\n");
      out.write("text-align: center; /* 중앙 정렬 */\n");
      out.write("}\n");
      out.write(" \n");
      out.write("</style>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("\n");
      out.write("	<!-- Header -->\n");
      out.write("    ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/resources/jsp/Header.jsp", out, false);
      out.write("\n");
      out.write("    \n");
      out.write("    ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/resources/jsp/PayAside.jsp", out, false);
      out.write(" \n");
      out.write("<main>\n");
      out.write("	<div class=\"container_left\">\n");
      out.write("		<div class=\"text\">\n");
      out.write("			<h2>내 정보 조회</h2>\n");
      out.write("			<p>본인의 개인 정보를 확인 및 수정합니다.</p>\n");
      out.write("		</div>\n");
      out.write("		<table>\n");
      out.write("			<tbody>\n");
      out.write("				<tr>\n");
      out.write("					<th colspan=\"2\" rowspan=\"6\">\n");
      out.write("						");
      if (_jspx_meth_c_005fif_005f0(_jspx_page_context))
        return;
      out.write("\n");
      out.write("					</th>\n");
      out.write("					<th>이름</th><td><input type=\"text\" class=\"box1\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${eVO.emp_name}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" readonly /></td>\n");
      out.write("				</tr>\n");
      out.write("				<tr>\n");
      out.write("					<th>이메일</th><td><input type=\"text\" class=\"box1\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${eVO.emp_email}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" readonly /></td>\n");
      out.write("				</tr>\n");
      out.write("				<tr>\n");
      out.write("					<th>전화번호</th><td><input type=\"text\" class=\"box1\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${eVO.phone_number}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" readonly /></td>\n");
      out.write("				</tr>\n");
      out.write("				<tr>\n");
      out.write("					<th>부서</th><td><input type=\"text\" class=\"box1\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${eVO.team}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" readonly /></td>\n");
      out.write("				</tr>\n");
      out.write("				<tr>\n");
      out.write("					<th>직책</th><td><input type=\"text\" class=\"box1\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${eVO.position}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" readonly /></td>\n");
      out.write("				</tr>\n");
      out.write("				<tr>\n");
      out.write("					<th>연차</th><td><input type=\"text\" class=\"box1\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${eVO.pay_grade}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" readonly /></td>\n");
      out.write("				</tr>\n");
      out.write("				<tr>\n");
      out.write("					<th>입사일</th><td><input type=\"text\" class=\"box2\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${eVO.hire_date}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" readonly /></td>\n");
      out.write("					<th>잔여 연차</th><td><input type=\"text\" class=\"box2\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${eVO.vacation_balance}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" readonly /></td>\n");
      out.write("				</tr>\n");
      out.write("				<tr>\n");
      out.write("					<th>직원코드</th><td><input type=\"text\" class=\"box2\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${eVO.emp_idx}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" readonly /></td>\n");
      out.write("					<th>성별</th><td><input type=\"text\" class=\"box2\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${eVO.gender}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" readonly /></td>\n");
      out.write("				</tr>\n");
      out.write("				<tr>\n");
      out.write("					<th>주소</th><td><input type=\"text\" class=\"box3\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${eVO.home}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" readonly /></td>\n");
      out.write("					<th>상세주소</th><td><input type=\"text\" class=\"box3\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${eVO.detail_home}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" readonly /></td>\n");
      out.write("				</tr>\n");
      out.write("			</tbody>\n");
      out.write("		</table>\n");
      out.write("		<div class=\"buttons\">\n");
      out.write("			<button onclick=\"openmodal()\">수정하기</button>\n");
      out.write("			<button onclick=\"goToMain()\">메인으로</button>\n");
      out.write("		</div>	\n");
      out.write("	</div>\n");
      out.write("	<!-- 모달 오버레이 -->\n");
      out.write("	<div id=\"modal_overlay\"></div>\n");
      out.write("        \n");
      out.write("	<!-- 모달 창 -->\n");
      out.write("	<div id=\"update_detail\">\n");
      out.write("		<form id=\"updateForm\">\n");
      out.write("			<p>새로운 비밀번호</p>\n");
      out.write("			<div class=\"pwup\">\n");
      out.write("				<input type=\"password\" name=\"password\" id=\"password\" onkeyup=\"passwordCheck()\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${users.emp_password }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" placeholder=\"비밀번호를 입력하세요\"/>\n");
      out.write("			</div>\n");
      out.write("			<p>비밀번호 확인</p>\n");
      out.write("			<div class=\"pwup\">\n");
      out.write("				<input type=\"password\" name=\"passwordchk\" id=\"passwordchk\" onkeyup=\"passwordCheck()\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${users.emp_password }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" placeholder=\"비밀번호를 확인하세요\"/>\n");
      out.write("			</div>\n");
      out.write("			<div id=\"messageContainer\"></div>\n");
      out.write("			<p>싸인을 입력하세요</p>\n");
      out.write("			<canvas id=\"signature_pad\"></canvas>\n");
      out.write("			<div class=\"buttons\">\n");
      out.write("				<button type=\"button\" onclick=\"saveData()\">저장</button>\n");
      out.write("				<button type=\"button\" onclick=\"closemodal()\">닫기</button>\n");
      out.write("			</div>\n");
      out.write("		</form>\n");
      out.write("	</div>\n");
      out.write("</main>\n");
      out.write("	<!-- Footer -->\n");
      out.write("    ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/resources/jsp/Footer.jsp", out, false);
      out.write("\n");
      out.write("\n");
      out.write("<script type=\"text/javascript\">\n");
      out.write("\n");
      out.write("	/* 모달 창 열기 */\n");
      out.write("	function openmodal() {\n");
      out.write("		document.getElementById('modal_overlay').style.display = 'block';\n");
      out.write("		document.getElementById('update_detail').style.display = 'block';\n");
      out.write("	}\n");
      out.write("	/* 모달 창 닫기 */\n");
      out.write("	function closemodal() {\n");
      out.write("		document.getElementById('modal_overlay').style.display = 'none';\n");
      out.write("		document.getElementById('update_detail').style.display = 'none';\n");
      out.write("		\n");
      out.write("		// 입력 필드 초기화\n");
      out.write("	    document.getElementById('password').value = '';\n");
      out.write("	    document.getElementById('passwordchk').value = '';\n");
      out.write("	    \n");
      out.write("		// 기존 비밀번호 확인 메시지 제거\n");
      out.write("	    let existingMessage = document.getElementById('passwordMessage');\n");
      out.write("	    if (existingMessage) existingMessage.remove();\n");
      out.write("	    // 서명 캔버스 초기화\n");
      out.write("	    signaturePad.clear();\n");
      out.write("	}\n");
      out.write("	/* 메인화면으로 */\n");
      out.write("	function goToMain() {\n");
      out.write("		window.location.href = \"/index\";\n");
      out.write("	}\n");
      out.write("	\n");
      out.write("	// 비밀번호 확인 함수\n");
      out.write("	function passwordCheck() {\n");
      out.write("		let password = document.getElementById('password').value;\n");
      out.write("		let passwordchk = document.getElementById('passwordchk').value;\n");
      out.write("		let message = document.createElement('p');\n");
      out.write("		message.id = 'passwordMessage';\n");
      out.write("        \n");
      out.write("     	// 기존 메시지 제거\n");
      out.write("		let existingMessage = document.getElementById('passwordMessage');\n");
      out.write("		if (existingMessage) existingMessage.remove();\n");
      out.write("\n");
      out.write("		if (password && passwordchk) {\n");
      out.write("			if (password === passwordchk) {\n");
      out.write("				message.style.color = 'green';\n");
      out.write("				message.textContent = '비밀번호가 일치합니다.';\n");
      out.write("			} else {\n");
      out.write("				message.style.color = 'red';\n");
      out.write("				message.textContent = '비밀번호가 일치하지 않습니다.';\n");
      out.write("			}\n");
      out.write("			let passwordchkDiv = document.getElementById('passwordchk').parentNode;\n");
      out.write("	        passwordchkDiv.appendChild(message);\n");
      out.write("		}\n");
      out.write("	}\n");
      out.write("	\n");
      out.write("		// 서명 캔버스 초기화\n");
      out.write("		let canvas = document.getElementById('signature_pad');\n");
      out.write("		let signaturePad = new SignaturePad(canvas, {\n");
      out.write("			backgroundColor: 'rgb(255, 255, 255)' // 캔버스 배경 흰색\n");
      out.write("	});\n");
      out.write("	\n");
      out.write("	// 데이터 저장 및 전송\n");
      out.write("	function saveData() {\n");
      out.write("			let password = document.getElementById('password').value;\n");
      out.write("			let passwordchk = document.getElementById('passwordchk').value;\n");
      out.write("\n");
      out.write("			// 비밀번호 유효성 검사\n");
      out.write("			if (!password || !passwordchk) {\n");
      out.write("			alert('비밀번호를 입력해주세요.');\n");
      out.write("				return;\n");
      out.write("			}\n");
      out.write("			if (password !== passwordchk) {\n");
      out.write("				alert('비밀번호가 일치하지 않습니다.');\n");
      out.write("				return;\n");
      out.write("			}\n");
      out.write("\n");
      out.write("			// 서명 데이터 (base64 이미지)\n");
      out.write("			let signatureData = signaturePad.isEmpty() ? '' : signaturePad.toDataURL('image/png');\n");
      out.write("\n");
      out.write("	        // AJAX로 데이터 전송\n");
      out.write("	        let xhr = new XMLHttpRequest();\n");
      out.write("	        xhr.open('POST', '/updateProfile', true); // 서버 엔드포인트 URL\n");
      out.write("	        xhr.setRequestHeader('Content-Type', 'application/json');\n");
      out.write("\n");
      out.write("	        let data = JSON.stringify({\n");
      out.write("	            password: password,\n");
      out.write("	            signature: signatureData\n");
      out.write("	        });\n");
      out.write("\n");
      out.write("	        xhr.onreadystatechange = function() {\n");
      out.write("	            if (xhr.readyState === 4) {\n");
      out.write("	                if (xhr.status === 200) {\n");
      out.write("	                    alert('정보가 성공적으로 업데이트되었습니다.');\n");
      out.write("	                    closemodal();\n");
      out.write("	                } else {\n");
      out.write("						let errorMessage = xhr.responseText;\n");
      out.write("	                    alert('업데이트 실패: ' + errorMessage);\n");
      out.write("	                }\n");
      out.write("	            }\n");
      out.write("	        };\n");
      out.write("	        xhr.send(data);\n");
      out.write("	    }\n");
      out.write("\n");
      out.write("	    // 오버레이 클릭 시 모달 닫기\n");
      out.write("	    document.getElementById('modal_overlay').addEventListener('click', function(e) {\n");
      out.write("	        if (e.target === this) {\n");
      out.write("	            closemodal();\n");
      out.write("	        }\n");
      out.write("	    });\n");
      out.write("	\n");
      out.write("</script>\n");
      out.write("\n");
      out.write("</body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005furl_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f0 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    _jspx_th_c_005furl_005f0.setPageContext(_jspx_page_context);
    _jspx_th_c_005furl_005f0.setParent(null);
    // /WEB-INF/views/MyPage/myPage.jsp(13,16) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005furl_005f0.setValue("/resources/css/Header.css");
    int _jspx_eval_c_005furl_005f0 = _jspx_th_c_005furl_005f0.doStartTag();
    if (_jspx_th_c_005furl_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      return true;
    }
    _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f0);
    return false;
  }

  private boolean _jspx_meth_c_005furl_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f1 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    _jspx_th_c_005furl_005f1.setPageContext(_jspx_page_context);
    _jspx_th_c_005furl_005f1.setParent(null);
    // /WEB-INF/views/MyPage/myPage.jsp(14,16) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005furl_005f1.setValue("/resources/css/Footer.css");
    int _jspx_eval_c_005furl_005f1 = _jspx_th_c_005furl_005f1.doStartTag();
    if (_jspx_th_c_005furl_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      return true;
    }
    _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f1);
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f0 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    _jspx_th_c_005fif_005f0.setPageContext(_jspx_page_context);
    _jspx_th_c_005fif_005f0.setParent(null);
    // /WEB-INF/views/MyPage/myPage.jsp(114,6) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fif_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${not empty eVO}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
    int _jspx_eval_c_005fif_005f0 = _jspx_th_c_005fif_005f0.doStartTag();
    if (_jspx_eval_c_005fif_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
      do {
        out.write("\n");
        out.write("									");
        if (_jspx_meth_c_005fif_005f1(_jspx_th_c_005fif_005f0, _jspx_page_context))
          return true;
        out.write("\n");
        out.write("									");
        if (_jspx_meth_c_005fif_005f2(_jspx_th_c_005fif_005f0, _jspx_page_context))
          return true;
        out.write("\n");
        out.write("								");
        int evalDoAfterBody = _jspx_th_c_005fif_005f0.doAfterBody();
        if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
          break;
      } while (true);
    }
    if (_jspx_th_c_005fif_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f1(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fif_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f1 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    _jspx_th_c_005fif_005f1.setPageContext(_jspx_page_context);
    _jspx_th_c_005fif_005f1.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fif_005f0);
    // /WEB-INF/views/MyPage/myPage.jsp(115,9) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fif_005f1.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${not empty eVO['f_name']}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
    int _jspx_eval_c_005fif_005f1 = _jspx_th_c_005fif_005f1.doStartTag();
    if (_jspx_eval_c_005fif_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
      do {
        out.write("\n");
        out.write("										<img src=\"");
        out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
        out.write("/resources/images/");
        out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${eVO['f_name']}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
        out.write(".jpg\" alt=\"증명사진\">\n");
        out.write("									");
        int evalDoAfterBody = _jspx_th_c_005fif_005f1.doAfterBody();
        if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
          break;
      } while (true);
    }
    if (_jspx_th_c_005fif_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f1);
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f2(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fif_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f2 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    _jspx_th_c_005fif_005f2.setPageContext(_jspx_page_context);
    _jspx_th_c_005fif_005f2.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fif_005f0);
    // /WEB-INF/views/MyPage/myPage.jsp(118,9) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fif_005f2.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${empty eVO['f_name']}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
    int _jspx_eval_c_005fif_005f2 = _jspx_th_c_005fif_005f2.doStartTag();
    if (_jspx_eval_c_005fif_005f2 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
      do {
        out.write("\n");
        out.write("										<img src=\"");
        out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
        out.write("/resources/images/default_profile.jpg\" alt=\"기본 프로필\">\n");
        out.write("									");
        int evalDoAfterBody = _jspx_th_c_005fif_005f2.doAfterBody();
        if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
          break;
      } while (true);
    }
    if (_jspx_th_c_005fif_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f2);
    return false;
  }
}
