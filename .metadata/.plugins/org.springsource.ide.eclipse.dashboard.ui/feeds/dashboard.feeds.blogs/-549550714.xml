<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Spring]]></title><description><![CDATA[Level up your Java code and explore what Spring can do for you.]]></description><link>https://spring.io</link><generator>GatsbyJS</generator><lastBuildDate>Tue, 13 May 2025 00:41:28 GMT</lastBuildDate><item><title><![CDATA[A Bootiful Podcast: V K?rbes on security from the platform on up]]></title><link>https://spring.io/blog/2025/05/08/a-bootiful-podcast-v-korbes</link><guid isPermaLink="true">https://spring.io/blog/2025/05/08/a-bootiful-podcast-v-korbes</guid><dc:creator><![CDATA[joshlong]]></dc:creator><pubDate>Thu, 08 May 2025 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;Hi, Spring fans! In today&apos;s extra special installment I talk to Broadcom&apos;s V K?rbes who works on security above and below the application.&lt;/p&gt;
&lt;iframe title=&quot;V K?rbes on security from the platform on up&quot; allowtransparency=&quot;true&quot; height=&quot;300&quot; width=&quot;100%&quot; style=&quot;border: none; min-width: min(100%, 430px);height:300px;&quot; scrolling=&quot;no&quot; data-name=&quot;pb-iframe-player&quot; src=&quot;https://www.podbean.com/player-v2/?from=embed&amp;i=szduy-18a255c-pb&amp;square=1&amp;share=1&amp;download=1&amp;fonts=Arial&amp;skin=1&amp;font-color=&amp;rtl=0&amp;logo_link=&amp;btn-skin=7&amp;size=300&quot; loading=&quot;lazy&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;</content:encoded></item><item><title><![CDATA[This Week in Spring - May 6th, 2025]]></title><link>https://spring.io/blog/2025/05/06/this-week-in-spring-may-6th-2025</link><guid isPermaLink="true">https://spring.io/blog/2025/05/06/this-week-in-spring-may-6th-2025</guid><dc:creator><![CDATA[joshlong]]></dc:creator><pubDate>Tue, 06 May 2025 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;Hi, Spring fans! As I write this, I&apos;m winging my way to lovely London, UK, for the amazing Devoxx UK event! I&apos;ll be looking at the wide and wonderful world of Springdom. Then, from there, it&apos;s off to Code Remix in Miami. I&apos;ll also be speaking at the Tampa JUG while I&apos;m there, so look out! After that, I&apos;ll be headed back to Europe?a wee bit further north this time?to Stockholm for the amazing JForum event, where I&apos;ll be doing a much deeper dive into all things Spring.&lt;/p&gt;
&lt;p&gt;You know what I&apos;m most excited about? You don&apos;t have to look far to figure it out?just check out the ol&apos; &lt;a href=&quot;https://calendar.spring.io&quot;&gt;Spring Calendar&lt;/a&gt;. Spring AI releases on May 20th! And then, a few short and sweet days later?which, by the way, I&apos;ll be spending in beautiful Barcelona, Spain at Spring I/O?out comes Spring Boot 3.5! Let&apos;s goooo!&lt;/p&gt;
&lt;p&gt;Speaking of Spring I/O, I&apos;ll be there along with Spring legends Rod Johnson and Juergen Hoeller, co-founders of the project more than 20 years ago, doing a talk called &lt;em&gt;From Beans to Boot, Aspects to AI&lt;/em&gt;. Do &lt;em&gt;NOT&lt;/em&gt; miss this!&lt;/p&gt;
&lt;p&gt;I&apos;ll also be doing a presentation with GraalVM founder Thomas Wuerthinger.&lt;/p&gt;
&lt;p&gt;Spring Boot is a big release, but we&apos;ve already got plenty of exciting GA versions of Spring Boot. Spring AI, on the other hand? Not so much. This is a &lt;em&gt;big&lt;/em&gt; deal?&lt;em&gt;years&lt;/em&gt; in the making! (Listen, if anybody could&apos;ve predicted the rate of change in the AI space when we first started, I bet we would&apos;ve released things a little differently¡¦)&lt;/p&gt;
&lt;p&gt;Anyway, my friends, we&apos;ve got a ton of things to look at this week, so let&apos;s dive right in!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Dynamic Tool Updates in Spring AI&apos;s &lt;a href=&quot;https://spring.io/blog/2025/05/04/spring-ai-dynamic-tool-updates-with-mcp&quot;&gt;Model Context Protocol&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;On last week&apos;s installment of &lt;em&gt;A Bootiful Podcast&lt;/em&gt;, I talked to &lt;a href=&quot;https://spring.io/blog/2025/05/01/a-bootiful-podcast-mary-ellen-bowman&quot;&gt;Spring instructor Mary Ellen Bowman&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://spring.io/blog/2025/05/01/spring-cloud-2025-0-0-rc1-released&quot;&gt;Spring Cloud 2025.0.0-RC1 (aka Northfields) has been released&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://spring.io/blog/2025/04/30/spring-ai-1-0-0-m8-released&quot;&gt;Spring AI 1.0.0-M8 Released&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Did you see the presentation that &lt;a href=&quot;https://youtu.be/uPWebxgEwlE?si=JprirPQzuQdefyRe&quot;&gt;Dr. Mark Pollack, lead of Spring AI, and I put together for Devnexus a month or so ago?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Similarly, have you seen &lt;a href=&quot;https://youtu.be/GAgelbsTb9M?si=JFT-nit29Gl5o8S9&quot;&gt;my end-to-end tutorial&lt;/a&gt; on building Spring Boot applications?&lt;/li&gt;
&lt;li&gt;I also did a short video looking at Spring AI co-lead Christian Tsolov&apos;s review &lt;a href=&quot;https://www.youtube.com/shorts/B1dan9IWph0&quot;&gt;of Google&apos;s &lt;em&gt;Prompt Engineering&lt;/em&gt; book&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Why does Spring use bubble sort (instead of something more efficient)? There&apos;s nobody better to chronicle this tale than Spring Framework legend &lt;a href=&quot;https://poutsma-principles.com/blog/2025/04/29/bubble-sort-in-spring/&quot;&gt;Arjen Poutsma&lt;/a&gt;!&lt;/li&gt;
&lt;li&gt;This content on evaluation testing with Spring AI couldn&apos;t be more pertinent! Remember, you wouldn&apos;t deploy code to production without testing?so why would you deploy AI results you haven&apos;t evaluated?&lt;/li&gt;
&lt;li&gt;Good news, everybody! Instance main methods move from preview &lt;a href=&quot;https://www.infoq.com/news/2025/05/jdk25-instance-main-methods/&quot;&gt;to &lt;em&gt;final&lt;/em&gt; in JDK 25!&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content:encoded></item><item><title><![CDATA[Dynamic Tool Updates in Spring AI's Model Context Protocol]]></title><link>https://spring.io/blog/2025/05/04/spring-ai-dynamic-tool-updates-with-mcp</link><guid isPermaLink="true">https://spring.io/blog/2025/05/04/spring-ai-dynamic-tool-updates-with-mcp</guid><dc:creator><![CDATA[tzolov]]></dc:creator><pubDate>Sun, 04 May 2025 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;The Model Context Protocol (MCP) is a powerful feature in Spring AI that enables AI models to access external tools and resources through a standardized interface. One interesting capabilities of MCP is its ability to dynamically update available tools at runtime.&lt;/p&gt;
&lt;p&gt;This blog post explores how Spring AI implements dynamic tool updates in MCP, providing flexibility and extensibility to AI-powered applications.&lt;/p&gt;
&lt;p&gt;The related example code is available here: &lt;a href=&quot;https://github.com/spring-projects/spring-ai-examples/tree/main/model-context-protocol/dynamic-tool-update&quot;&gt;Dynamic Tool Update Example&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;understanding-the-model-context-protocol&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#understanding-the-model-context-protocol&quot; aria-label=&quot;understanding the model context protocol permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Understanding the Model Context Protocol&lt;/h2&gt;
&lt;img style=&quot;float: right; display: block; margin: auto;&quot; src=&quot;https://raw.githubusercontent.com/spring-io/spring-io-static/refs/heads/main/blog/tzolov/20250504/mcp-tools-notifications.png&quot; width=&quot;250&quot;&gt;
&lt;p&gt;Before diving into dynamic tool updates, let&apos;s understand what MCP is and why it matters:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://modelcontextprotocol.io/introduction&quot;&gt;The Model Context Protocol (MCP)&lt;/a&gt; is a standardized interface that allows AI applicaitons and Agents to: &lt;strong&gt;Access external tools&lt;/strong&gt; , &lt;strong&gt;Retrieve resources&lt;/strong&gt; , &lt;strong&gt;Use prompt templates&lt;/strong&gt; .&lt;/p&gt;
&lt;p&gt;MCP follows a &lt;a href=&quot;https://modelcontextprotocol.io/docs/concepts/architecture&quot;&gt;client-server architecture&lt;/a&gt;: &lt;strong&gt;MCP Servers&lt;/strong&gt; - expose tools, resources, and prompts; &lt;strong&gt;MCP Clients&lt;/strong&gt; - connect to servers and use their capabilities; &lt;strong&gt;AI Models&lt;/strong&gt; - interact with the world through these clients&lt;/p&gt;
&lt;p&gt;Spring AI provides a comprehensive implementation of MCP with both &lt;a href=&quot;https://docs.spring.io/spring-ai/reference/api/mcp/mcp-client-boot-starter-docs.html&quot;&gt;client&lt;/a&gt; and &lt;a href=&quot;https://docs.spring.io/spring-ai/reference/api/mcp/mcp-server-boot-starter-docs.html&quot;&gt;server&lt;/a&gt; components, making it easy to integrate AI capabilities into Spring applications.&lt;/p&gt;
&lt;h3 id=&quot;the-dynamic-tool-update-feature&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#the-dynamic-tool-update-feature&quot; aria-label=&quot;the dynamic tool update feature permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The Dynamic Tool Update Feature&lt;/h3&gt;
&lt;p&gt;One powerful aspects of the MCP is the ability to dynamically update the available tools at runtime. This means:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;MCP Servers can add or remove tools without restarting&lt;/li&gt;
&lt;li&gt;MCP Clients can detect these changes&lt;/li&gt;
&lt;li&gt;AI models can immediately use the new capabilities&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;how-dynamic-tool-updates-work&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#how-dynamic-tool-updates-work&quot; aria-label=&quot;how dynamic tool updates work permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How Dynamic Tool Updates Work&lt;/h2&gt;
&lt;p&gt;The dynamic tool update process involves several components working together:&lt;/p&gt;
&lt;h3 id=&quot;server-side-implementation&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#server-side-implementation&quot; aria-label=&quot;server side implementation permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Server-Side Implementation&lt;/h3&gt;
&lt;p&gt;Spring AI&apos;s &lt;code&gt;@Tool&lt;/code&gt; annotation makes it easy to expose methods as MCP tools:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;public class MathTools {

    @Tool(description = &quot;Adds two numbers&quot;)
    public int sumNumbers(int number1, int number2) {
        return number1 + number2;
    }

    // ...
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The framework automatically:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Extracts method parameters as tool inputs&lt;/li&gt;
&lt;li&gt;Generates appropriate JSON schemas&lt;/li&gt;
&lt;li&gt;Handles parameter validation and conversion&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;On the server side, Spring AI&apos;s MCP implementation provides a straightforward way to add MCP tools at start time and dynamically at runtime:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;@SpringBootApplication
public class ServerApplication {

    //1. Tools added at start time by the Spring AI MCP Server Boot starter
    @Bean
    public ToolCallbackProvider weatherTools(WeatherService weatherService) {
        return MethodToolCallbackProvider.builder().toolObjects(weatherService).build();
    }

    //2. Runtime tool addition
    @Bean
    public CommandLineRunner commandRunner(McpSyncServer mcpSyncServer) {
        return args -&gt; {

            // Wait for some tool update signal

            // Add math tools dynamically
            List&amp;#x3C;SyncToolSpecification&gt; newTools = McpToolUtils
                    .toSyncToolSpecifications(ToolCallbacks.from(new MathTools()));

            for (SyncToolSpecification newTool : newTools) {
				mcpSyncServer.addTool(newTool);
			}
        };
    }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In this example:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;The server initially exposes only weather forecast tools&lt;/li&gt;
&lt;li&gt;When a custom tool-update signal is received the &lt;code&gt;McpSyncServer.addTool()&lt;/code&gt; method is used to dynamically register new tools&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The &lt;code&gt;McpSyncServer&lt;/code&gt; class provides methods for tool management:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;addTool(SyncToolSpecification)&lt;/code&gt; - Adds a new tool&lt;/li&gt;
&lt;li&gt;&lt;code&gt;removeTool(String)&lt;/code&gt; - Removes a tool by name&lt;/li&gt;
&lt;li&gt;&lt;code&gt;notifyToolsListChanged()&lt;/code&gt; - Notifies clients about tool changes&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; you can add and/or remove Tools only after the Clinet/Server connection has been initialized.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;client-side-implementation&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#client-side-implementation&quot; aria-label=&quot;client side implementation permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Client-Side Implementation&lt;/h3&gt;
&lt;p&gt;The MCP protocol includes a notification system that allows servers to inform clients about changes to available tools. This notification system ensures that clients always have an up-to-date view of the server&apos;s capabilities.&lt;/p&gt;
&lt;p&gt;On the client side, Spring AI provides mechanisms to detect and react to tool changes:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;@Bean
McpSyncClientCustomizer customizeMcpClient() {
    return (name, mcpClientSpec) -&gt; {
        mcpClientSpec.toolsChangeConsumer(tv -&gt; {
            logger.info(&quot;\nMCP TOOLS CHANGE: &quot; + tv);
            latch.countDown();
        });
    };
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The client registers a listener that is invoked whenever the server&apos;s available tools change. This allows the client to:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Be notified when tools are added or removed&lt;/li&gt;
&lt;li&gt;Update its internal state accordingly&lt;/li&gt;
&lt;li&gt;Make the new tools immediately available to the AI model&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Currently Spring AI doesn&apos;t maintain internal state about the updated tools, but you can use the customization listener to implement smart tool caching or similar.&lt;/p&gt;
&lt;h3 id=&quot;tool-discovery-and-usage&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#tool-discovery-and-usage&quot; aria-label=&quot;tool discovery and usage permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Tool Discovery and Usage&lt;/h3&gt;
&lt;p&gt;The client can discover available tools at any time:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;List&amp;#x3C;ToolDescription&gt; toolDescriptions = chatClientBuilder.build()
        .prompt(&quot;What tools are available?&quot;)
        .toolCallbacks(tools)
        .call()
        .entity(new ParameterizedTypeReference&amp;#x3C;List&amp;#x3C;ToolDescription&gt;&gt;() {});
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;A key insight from the Spring AI MCP implementation is:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;TIP&lt;/strong&gt;: The client implementation relies on the fact that the &lt;a href=&quot;https://github.com/spring-projects/spring-ai/blob/9e71b163e315199fe7b46495d87a0828a807b88f/mcp/common/src/main/java/org/springframework/ai/mcp/SyncMcpToolCallbackProvider.java#L132&quot;&gt;ToolCallbackProvider#getToolCallbacks&lt;/a&gt; implementation for MCP will always retrieves the current list of MCP tools from the server.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This means that whenever a client requests the available tools, it will always get the most up-to-date list from the server, without needing to restart or reinitialize the client.&lt;/p&gt;
&lt;h2 id=&quot;practical-applications&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#practical-applications&quot; aria-label=&quot;practical applications permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Practical Applications&lt;/h2&gt;
&lt;p&gt;Dynamic tool updates in MCP enable several powerful use cases:&lt;/p&gt;
&lt;h3 id=&quot;1-feature-flags-for-ai-capabilities&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#1-feature-flags-for-ai-capabilities&quot; aria-label=&quot;1 feature flags for ai capabilities permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;1. Feature Flags for AI Capabilities&lt;/h3&gt;
&lt;p&gt;You can implement feature flags that control which AI capabilities are available:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;if (featureFlags.isEnabled(&quot;advanced-math&quot;)) {
    mcpSyncServer.addTool(advancedMathTools);
}
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;2-context-aware-tool-loading&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#2-context-aware-tool-loading&quot; aria-label=&quot;2 context aware tool loading permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;2. Context-Aware Tool Loading&lt;/h3&gt;
&lt;p&gt;Load tools based on the current context or user permissions:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;if (userHasPermission(currentUser, &quot;admin-tools&quot;)) {
    mcpSyncServer.addTool(adminTools);
}
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;3-progressive-enhancement&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#3-progressive-enhancement&quot; aria-label=&quot;3 progressive enhancement permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;3. Progressive Enhancement&lt;/h3&gt;
&lt;p&gt;Start with basic tools and add more advanced capabilities as needed:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;// Start with basic tools
mcpSyncServer.addTool(basicTools);

// Add advanced tools when the user reaches a certain level
userService.onUserLevelUp(user -&gt; {
    if (user.getLevel() &gt;= 5) {
        mcpSyncServer.addTool(advancedTools);
    }
});
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;4-dynamic-plugin-architecture&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#4-dynamic-plugin-architecture&quot; aria-label=&quot;4 dynamic plugin architecture permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;4. Dynamic Plugin Architecture&lt;/h3&gt;
&lt;p&gt;Implement a plugin system where new capabilities can be added at runtime:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-java&quot;&gt;pluginRegistry.onPluginLoaded(plugin -&gt; {
    if (plugin.hasMcpTools()) {
        mcpSyncServer.addTool(plugin.getMcpTools());
    }
});
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;conclusion&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#conclusion&quot; aria-label=&quot;conclusion permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;Spring AI&apos;s handling of dynamic tool updates in the Model Context Protocol provides a mechanism for extending AI capabilities at runtime. This feature enables more flexible, extensible, and resource-efficient AI applications.&lt;/p&gt;
&lt;p&gt;Key takeaways:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Standardized Interface&lt;/strong&gt;: MCP provides a consistent way for AI models to interact with external tools and resources.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Dynamic Updates&lt;/strong&gt;: Tools can be added or removed at runtime without requiring application restarts.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Automatic Discovery&lt;/strong&gt;: Clients can detect changes to available tools and make them immediately available to AI models.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Simple API&lt;/strong&gt;: Spring AI provides a clean, annotation-based API for defining and managing MCP tools.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;By leveraging dynamic tool updates in Spring AI&apos;s MCP implementation, developers can create more adaptable AI applications that can evolve their capabilities based on runtime conditions, user needs, and system requirements.&lt;/p&gt;
&lt;h2 id=&quot;resources&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#resources&quot; aria-label=&quot;resources permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Resources&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.spring.io/spring-ai/reference/&quot;&gt;Spring AI Documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://localhost:3000/specification/2024-11-05/server/tools&quot;&gt;Model Context Protocol Tools Specification&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/spring-projects/spring-ai-examples&quot;&gt;Spring AI Examples Repository&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content:encoded></item><item><title><![CDATA[Spring Cloud 2025.0.0-RC1 (aka Northfields) has been released]]></title><link>https://spring.io/blog/2025/05/01/spring-cloud-2025-0-0-rc1-released</link><guid isPermaLink="true">https://spring.io/blog/2025/05/01/spring-cloud-2025-0-0-rc1-released</guid><dc:creator><![CDATA[ryanjbaxter]]></dc:creator><pubDate>Thu, 01 May 2025 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;On behalf of the community, I am pleased to announce that the Release Candidate 1 (RC1) of the &lt;a href=&quot;https://cloud.spring.io&quot;&gt;Spring Cloud 2025.0.0&lt;/a&gt; Release Train is available today. The release can be found in &lt;a href=&quot;https://repo.spring.io/milestone/&quot;&gt;Spring Milestone&lt;/a&gt; repository. You can check out the 2025.0 &lt;a href=&quot;https://github.com/spring-cloud/spring-cloud-release/wiki/Spring-Cloud-2025.0-Release-Notes&quot;&gt;release notes for more information&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;notable-changes-in-the-202500-release-train&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#notable-changes-in-the-202500-release-train&quot; aria-label=&quot;notable changes in the 202500 release train permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Notable Changes in the 2025.0.0 Release Train&lt;/h2&gt;
&lt;p&gt;This release is based on Spring Boot 3.5.0-RC1.&lt;/p&gt;
&lt;p&gt;For a complete list of changes made in this release see &lt;a href=&quot;https://github.com/orgs/spring-cloud/projects/174&quot;&gt;this project on GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&quot;spring-cloud-config&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#spring-cloud-config&quot; aria-label=&quot;spring cloud config permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Spring Cloud Config&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Support YAML specific profile documents in AWS S3 buckets (&lt;a href=&quot;https://github.com/spring-cloud/spring-cloud-config/pull/2825&quot;&gt;#2825&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;spring-cloud-gateway&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#spring-cloud-gateway&quot; aria-label=&quot;spring cloud gateway permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Spring Cloud Gateway&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Allow registering custom filters and predicates as beans (&lt;a href=&quot;https://github.com/spring-cloud/spring-cloud-gateway/issues/3250&quot;&gt;#3250&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Support setting Spring.webflux.base-path and supporting it in path predicate (&lt;a href=&quot;https://github.com/spring-cloud/spring-cloud-gateway/pull/2984&quot;&gt;#2984&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Add Permissions-Policy as configurable option to SecureHeaders GatewayFilter (&lt;a href=&quot;https://github.com/spring-cloud/spring-cloud-gateway/issues/2975&quot;&gt;#2975&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Support for reloading httpClient connectTimeout Configuration (&lt;a href=&quot;https://github.com/spring-cloud/spring-cloud-gateway/pull/3679&quot;&gt;#3679&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;spring-cloud-task&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#spring-cloud-task&quot; aria-label=&quot;spring cloud task permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Spring Cloud Task&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Added deprecation notifications for Remote Partitioning and Task Launcher (&lt;a href=&quot;https://github.com/spring-cloud/spring-cloud-task/commit/1d4e1593ac41b0bc192fca6bef7a15a52ab3dbcc&quot;&gt;1d4e159&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;spring-cloud-stream&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#spring-cloud-stream&quot; aria-label=&quot;spring cloud stream permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Spring Cloud Stream&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;StreamBridge does not add dynamic Bindings to Output/Input binding lifecycle (&lt;a href=&quot;https://github.com/spring-cloud/spring-cloud-stream/issues/3106&quot;&gt;#3106&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;spring-cloud-function&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#spring-cloud-function&quot; aria-label=&quot;spring cloud function permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Spring Cloud Function&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Spring Cloud Function Web is essentially deprecated with Spring Cloud Function support in Spring Cloud Gateway as the replacement.&lt;/li&gt;
&lt;li&gt;Deprecate RSocket module (&lt;a href=&quot;https://github.com/spring-cloud/spring-cloud-function/issues/1267&quot;&gt;#1267&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Allow adapter to listen for additional http verbs (&lt;a href=&quot;https://github.com/spring-cloud/spring-cloud-function/pull/1271&quot;&gt;#1271&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The following modules were updated as part of 2025.0.0-RC1:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Module&lt;/th&gt;
&lt;th&gt;Version&lt;/th&gt;
&lt;th&gt;Issues&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Spring Cloud Netflix&lt;/td&gt;
&lt;td&gt;4.3.0-RC1&lt;/td&gt;
&lt;td&gt;(&lt;a href=&quot;https://github.com/spring-cloud/spring-cloud-netflix/releases/tag/v4.3.0-RC1&quot;&gt;issues&lt;/a&gt;)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Spring Cloud Starter Build&lt;/td&gt;
&lt;td&gt;2025.0.0-RC1&lt;/td&gt;
&lt;td&gt;(&lt;a href=&quot;https://github.com/spring-cloud/spring-cloud-starter-build/releases/tag/v2025.0.0-RC1&quot;&gt;issues&lt;/a&gt;)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Spring Cloud Consul&lt;/td&gt;
&lt;td&gt;4.3.0-RC1&lt;/td&gt;
&lt;td&gt;(&lt;a href=&quot;https://github.com/spring-cloud/spring-cloud-consul/releases/tag/v4.3.0-RC1&quot;&gt;issues&lt;/a&gt;)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Spring Cloud Config&lt;/td&gt;
&lt;td&gt;4.3.0-RC1&lt;/td&gt;
&lt;td&gt;(&lt;a href=&quot;https://github.com/spring-cloud/spring-cloud-config/releases/tag/v4.3.0-RC1&quot;&gt;issues&lt;/a&gt;)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Spring Cloud Build&lt;/td&gt;
&lt;td&gt;4.3.0-RC1&lt;/td&gt;
&lt;td&gt;(&lt;a href=&quot;https://github.com/spring-cloud/spring-cloud-build/releases/tag/v4.3.0-RC1&quot;&gt;issues&lt;/a&gt;)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Spring Cloud Gateway&lt;/td&gt;
&lt;td&gt;4.3.0-RC1&lt;/td&gt;
&lt;td&gt;(&lt;a href=&quot;https://github.com/spring-cloud/spring-cloud-gateway/releases/tag/v4.3.0-RC1&quot;&gt;issues&lt;/a&gt;)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Spring Cloud Zookeeper&lt;/td&gt;
&lt;td&gt;4.3.0-RC1&lt;/td&gt;
&lt;td&gt;(&lt;a href=&quot;https://github.com/spring-cloud/spring-cloud-zookeeper/releases/tag/v4.3.0-RC1&quot;&gt;issues&lt;/a&gt;)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Spring Cloud Contract&lt;/td&gt;
&lt;td&gt;4.3.0-RC1&lt;/td&gt;
&lt;td&gt;(&lt;a href=&quot;https://github.com/spring-cloud/spring-cloud-contract/releases/tag/v4.3.0-RC1&quot;&gt;issues&lt;/a&gt;)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Spring Cloud Circuitbreaker&lt;/td&gt;
&lt;td&gt;3.3.0-RC1&lt;/td&gt;
&lt;td&gt;(&lt;a href=&quot;https://github.com/spring-cloud/spring-cloud-circuitbreaker/releases/tag/v3.3.0-RC1&quot;&gt;issues&lt;/a&gt;)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Spring Cloud Task&lt;/td&gt;
&lt;td&gt;3.3.0-RC1&lt;/td&gt;
&lt;td&gt;(&lt;a href=&quot;https://github.com/spring-cloud/spring-cloud-task/releases/tag/v3.3.0-RC1&quot;&gt;issues&lt;/a&gt;)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Spring Cloud Kubernetes&lt;/td&gt;
&lt;td&gt;3.3.0-RC1&lt;/td&gt;
&lt;td&gt;(&lt;a href=&quot;https://github.com/spring-cloud/spring-cloud-kubernetes/releases/tag/v3.3.0-RC1&quot;&gt;issues&lt;/a&gt;)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Spring Cloud Bus&lt;/td&gt;
&lt;td&gt;4.3.0-RC1&lt;/td&gt;
&lt;td&gt;(&lt;a href=&quot;https://github.com/spring-cloud/spring-cloud-bus/releases/tag/v4.3.0-RC1&quot;&gt;issues&lt;/a&gt;)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Spring Cloud Commons&lt;/td&gt;
&lt;td&gt;4.3.0-RC1&lt;/td&gt;
&lt;td&gt;(&lt;a href=&quot;https://github.com/spring-cloud/spring-cloud-commons/releases/tag/v4.3.0-RC1&quot;&gt;issues&lt;/a&gt;)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Spring Cloud Openfeign&lt;/td&gt;
&lt;td&gt;4.3.0-RC1&lt;/td&gt;
&lt;td&gt;(&lt;a href=&quot;https://github.com/spring-cloud/spring-cloud-openfeign/releases/tag/v4.3.0-RC1&quot;&gt;issues&lt;/a&gt;)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Spring Cloud Stream&lt;/td&gt;
&lt;td&gt;4.3.0-RC1&lt;/td&gt;
&lt;td&gt;(&lt;a href=&quot;https://github.com/spring-cloud/spring-cloud-stream/releases/tag/v4.3.0-RC1&quot;&gt;issues&lt;/a&gt;)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Spring Cloud Function&lt;/td&gt;
&lt;td&gt;4.3.0-RC1&lt;/td&gt;
&lt;td&gt;(&lt;a href=&quot;https://github.com/spring-cloud/spring-cloud-function/releases/tag/v4.3.0-RC1&quot;&gt;issues&lt;/a&gt;)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Spring Cloud Vault&lt;/td&gt;
&lt;td&gt;4.3.0-RC1&lt;/td&gt;
&lt;td&gt;(&lt;a href=&quot;https://github.com/spring-cloud/spring-cloud-vault/releases/tag/v4.3.0-RC1&quot;&gt;issues&lt;/a&gt;)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;As always, we welcome feedback on &lt;a href=&quot;https://github.com/spring-cloud/&quot;&gt;GitHub&lt;/a&gt;, on &lt;a href=&quot;https://gitter.im/spring-cloud/spring-cloud&quot;&gt;Gitter&lt;/a&gt;, on &lt;a href=&quot;https://stackoverflow.com/questions/tagged/spring-cloud&quot;&gt;Stack Overflow&lt;/a&gt;, or on &lt;a href=&quot;https://twitter.com/SpringCloud&quot;&gt;Twitter&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;To get started with Maven with a BOM (dependency management only):&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-xml&quot;&gt;
    &amp;#x3C;repositories&gt;
        &amp;#x3C;repository&gt;
            &amp;#x3C;id&gt;spring-milestones&amp;#x3C;/id&gt;
            &amp;#x3C;name&gt;Spring Milestones&amp;#x3C;/name&gt;
            &amp;#x3C;url&gt;https://repo.spring.io/milestone&amp;#x3C;/url&gt;
            &amp;#x3C;snapshots&gt;
                &amp;#x3C;enabled&gt;false&amp;#x3C;/enabled&gt;
            &amp;#x3C;/snapshots&gt;
        &amp;#x3C;/repository&gt;
    &amp;#x3C;/repositories&gt;
&amp;#x3C;dependencyManagement&gt;
    &amp;#x3C;dependencies&gt;
        &amp;#x3C;dependency&gt;
            &amp;#x3C;groupId&gt;org.springframework.cloud&amp;#x3C;/groupId&gt;
            &amp;#x3C;artifactId&gt;spring-cloud-dependencies&amp;#x3C;/artifactId&gt;
            &amp;#x3C;version&gt;2025.0.0-RC1&amp;#x3C;/version&gt;
            &amp;#x3C;type&gt;pom&amp;#x3C;/type&gt;
            &amp;#x3C;scope&gt;import&amp;#x3C;/scope&gt;
        &amp;#x3C;/dependency&gt;
    &amp;#x3C;/dependencies&gt;
&amp;#x3C;/dependencyManagement&gt;
&amp;#x3C;dependencies&gt;
    &amp;#x3C;dependency&gt;
        &amp;#x3C;groupId&gt;org.springframework.cloud&amp;#x3C;/groupId&gt;
        &amp;#x3C;artifactId&gt;spring-cloud-starter-config&amp;#x3C;/artifactId&gt;
    &amp;#x3C;/dependency&gt;
    &amp;#x3C;dependency&gt;
        &amp;#x3C;groupId&gt;org.springframework.cloud&amp;#x3C;/groupId&gt;
        &amp;#x3C;artifactId&gt;spring-cloud-starter-netflix-eureka-client&amp;#x3C;/artifactId&gt;
    &amp;#x3C;/dependency&gt;
    ...
&amp;#x3C;/dependencies&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;or with Gradle:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-groovy&quot;&gt;plugins {
  id &apos;java&apos;
  id &apos;org.springframework.boot&apos; version &apos;3.5.0-RC1&apos;
  id &apos;io.spring.dependency-management&apos; version &apos;1.1.7&apos;
}

//...

ext {
  set(&apos;springCloudVersion&apos;, &quot;2025.0.0-RC1&quot;)
}

dependencies {
  implementation &apos;org.springframework.cloud:spring-cloud-starter-config&apos;
  implementation &apos;org.springframework.cloud:spring-cloud-starter-netflix-eureka-client&apos;
  //...
}

dependencyManagement {
  imports {
    mavenBom &quot;org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}&quot;
  }
}

//...

&lt;/code&gt;&lt;/pre&gt;</content:encoded></item></channel></rss>